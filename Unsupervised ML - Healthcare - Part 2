{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1PAlnX2y051bVrVajYwdQuDRWGQsjqrxU","timestamp":1689278877272}],"mount_file_id":"1KHyw48oVLXbP-sEWkwECDQWRvtnNsSAS","authorship_tag":"ABX9TyMkCwEwbCXCtPaDwDIc0pl8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Assignemnt 7 - Zhengxi Shen"],"metadata":{"id":"Vo1wZwJcCkyt"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"bGPUxcyj2oNn"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"markdown","source":["# Load and Explore the Data"],"metadata":{"id":"HFCmx0dlTajO"}},{"cell_type":"code","source":["# Load the dataset\n","\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","df = pd.read_csv('/content/drive/MyDrive/Columia/APAN 5420/inpatientCharges.csv')\n","\n","print(df.shape)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":389},"id":"4VmfXPub5C4t","executionInfo":{"status":"ok","timestamp":1689279014091,"user_tz":240,"elapsed":21918,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"dd4e8be8-723c-44bf-96f2-f969938de52e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","(163065, 12)\n"]},{"output_type":"execute_result","data":{"text/plain":["                             DRG Definition  Provider Id  \\\n","0  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC        10001   \n","1  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC        10005   \n","2  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC        10006   \n","3  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC        10011   \n","4  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC        10016   \n","\n","                      Provider Name     Provider Street Address Provider City  \\\n","0  SOUTHEAST ALABAMA MEDICAL CENTER      1108 ROSS CLARK CIRCLE        DOTHAN   \n","1     MARSHALL MEDICAL CENTER SOUTH  2505 U S HIGHWAY 431 NORTH          BOAZ   \n","2    ELIZA COFFEE MEMORIAL HOSPITAL          205 MARENGO STREET      FLORENCE   \n","3                 ST VINCENT'S EAST  50 MEDICAL PARK EAST DRIVE    BIRMINGHAM   \n","4     SHELBY BAPTIST MEDICAL CENTER     1000 FIRST STREET NORTH     ALABASTER   \n","\n","  Provider State  Provider Zip Code Hospital Referral Region Description  \\\n","0             AL              36301                          AL - Dothan   \n","1             AL              35957                      AL - Birmingham   \n","2             AL              35631                      AL - Birmingham   \n","3             AL              35235                      AL - Birmingham   \n","4             AL              35007                      AL - Birmingham   \n","\n","    Total Discharges   Average Covered Charges   Average Total Payments   \\\n","0                  91                 $32963.07                 $5777.24   \n","1                  14                 $15131.85                 $5787.57   \n","2                  24                 $37560.37                 $5434.95   \n","3                  25                 $13998.28                 $5417.56   \n","4                  18                 $31633.27                 $5658.33   \n","\n","  Average Medicare Payments  \n","0                  $4763.73  \n","1                  $4976.71  \n","2                  $4453.79  \n","3                  $4129.16  \n","4                  $4851.44  "],"text/html":["\n","\n","  <div id=\"df-f36e076f-cdbf-4cc0-9648-0098ae6f54ba\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DRG Definition</th>\n","      <th>Provider Id</th>\n","      <th>Provider Name</th>\n","      <th>Provider Street Address</th>\n","      <th>Provider City</th>\n","      <th>Provider State</th>\n","      <th>Provider Zip Code</th>\n","      <th>Hospital Referral Region Description</th>\n","      <th>Total Discharges</th>\n","      <th>Average Covered Charges</th>\n","      <th>Average Total Payments</th>\n","      <th>Average Medicare Payments</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10001</td>\n","      <td>SOUTHEAST ALABAMA MEDICAL CENTER</td>\n","      <td>1108 ROSS CLARK CIRCLE</td>\n","      <td>DOTHAN</td>\n","      <td>AL</td>\n","      <td>36301</td>\n","      <td>AL - Dothan</td>\n","      <td>91</td>\n","      <td>$32963.07</td>\n","      <td>$5777.24</td>\n","      <td>$4763.73</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10005</td>\n","      <td>MARSHALL MEDICAL CENTER SOUTH</td>\n","      <td>2505 U S HIGHWAY 431 NORTH</td>\n","      <td>BOAZ</td>\n","      <td>AL</td>\n","      <td>35957</td>\n","      <td>AL - Birmingham</td>\n","      <td>14</td>\n","      <td>$15131.85</td>\n","      <td>$5787.57</td>\n","      <td>$4976.71</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10006</td>\n","      <td>ELIZA COFFEE MEMORIAL HOSPITAL</td>\n","      <td>205 MARENGO STREET</td>\n","      <td>FLORENCE</td>\n","      <td>AL</td>\n","      <td>35631</td>\n","      <td>AL - Birmingham</td>\n","      <td>24</td>\n","      <td>$37560.37</td>\n","      <td>$5434.95</td>\n","      <td>$4453.79</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10011</td>\n","      <td>ST VINCENT'S EAST</td>\n","      <td>50 MEDICAL PARK EAST DRIVE</td>\n","      <td>BIRMINGHAM</td>\n","      <td>AL</td>\n","      <td>35235</td>\n","      <td>AL - Birmingham</td>\n","      <td>25</td>\n","      <td>$13998.28</td>\n","      <td>$5417.56</td>\n","      <td>$4129.16</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10016</td>\n","      <td>SHELBY BAPTIST MEDICAL CENTER</td>\n","      <td>1000 FIRST STREET NORTH</td>\n","      <td>ALABASTER</td>\n","      <td>AL</td>\n","      <td>35007</td>\n","      <td>AL - Birmingham</td>\n","      <td>18</td>\n","      <td>$31633.27</td>\n","      <td>$5658.33</td>\n","      <td>$4851.44</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f36e076f-cdbf-4cc0-9648-0098ae6f54ba')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-44d2ff38-5a3e-4c00-b8cb-915564c7dd64\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-44d2ff38-5a3e-4c00-b8cb-915564c7dd64')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-44d2ff38-5a3e-4c00-b8cb-915564c7dd64 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f36e076f-cdbf-4cc0-9648-0098ae6f54ba button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f36e076f-cdbf-4cc0-9648-0098ae6f54ba');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["# Rename the columns for further analysis use\n","df.columns = ['DRG','Provider_Id', 'Provider_Name','Provider_StreetAddress','Provider_City',\n","               'Provider_State','Provider_Zipcode','Hospital_referral_region_desp',\n","                'Total_Discharges','Average_Covered_Charges','Average_Total_Payments',\n","                'Average_Medicare_Payment']\n","df = df.drop('Average_Covered_Charges',axis=1)"],"metadata":{"id":"OdtJmSb06rAr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QHdHl3Li5PcQ","executionInfo":{"status":"ok","timestamp":1689279014294,"user_tz":240,"elapsed":217,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"c4e6db80-7891-4450-cec5-4bd9e77fca2c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 163065 entries, 0 to 163064\n","Data columns (total 11 columns):\n"," #   Column                         Non-Null Count   Dtype \n","---  ------                         --------------   ----- \n"," 0   DRG                            163065 non-null  object\n"," 1   Provider_Id                    163065 non-null  int64 \n"," 2   Provider_Name                  163065 non-null  object\n"," 3   Provider_StreetAddress         163065 non-null  object\n"," 4   Provider_City                  163065 non-null  object\n"," 5   Provider_State                 163065 non-null  object\n"," 6   Provider_Zipcode               163065 non-null  int64 \n"," 7   Hospital_referral_region_desp  163065 non-null  object\n"," 8   Total_Discharges               163065 non-null  int64 \n"," 9   Average_Total_Payments         163065 non-null  object\n"," 10  Average_Medicare_Payment       163065 non-null  object\n","dtypes: int64(3), object(8)\n","memory usage: 13.7+ MB\n"]}]},{"cell_type":"code","source":["# Change data types to prepare for further analysis\n","\n","df['DRG'] = df['DRG'].astype('category')\n","df['Provider_State'] = df['Provider_State'].astype('category')\n","df['Provider_City'] = df['Provider_City'].astype('category')\n","df['Provider_Id'] = df['Provider_Id'].astype('category')\n","df['Average_Total_Payments'] = (df['Average_Total_Payments']\n","                              .str.replace(r'[^-+\\d.]', '').astype(float))\n","df['Average_Medicare_Payment'] = (df['Average_Medicare_Payment']\n","                              .str.replace(r'[^-+\\d.]', '').astype(float))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KAiwTP2lKR8f","executionInfo":{"status":"ok","timestamp":1689279014884,"user_tz":240,"elapsed":592,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"ec04d093-8d70-4144-a42c-c0dec51ded43"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-0b1c76c97f3c>:8: FutureWarning: The default value of regex will change from True to False in a future version.\n","  .str.replace(r'[^-+\\d.]', '').astype(float))\n","<ipython-input-5-0b1c76c97f3c>:10: FutureWarning: The default value of regex will change from True to False in a future version.\n","  .str.replace(r'[^-+\\d.]', '').astype(float))\n"]}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gvL-Glv-KcwO","executionInfo":{"status":"ok","timestamp":1689279014885,"user_tz":240,"elapsed":32,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"235cf43f-109a-4767-a861-0c7d2a577961"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 163065 entries, 0 to 163064\n","Data columns (total 11 columns):\n"," #   Column                         Non-Null Count   Dtype   \n","---  ------                         --------------   -----   \n"," 0   DRG                            163065 non-null  category\n"," 1   Provider_Id                    163065 non-null  category\n"," 2   Provider_Name                  163065 non-null  object  \n"," 3   Provider_StreetAddress         163065 non-null  object  \n"," 4   Provider_City                  163065 non-null  category\n"," 5   Provider_State                 163065 non-null  category\n"," 6   Provider_Zipcode               163065 non-null  int64   \n"," 7   Hospital_referral_region_desp  163065 non-null  object  \n"," 8   Total_Discharges               163065 non-null  int64   \n"," 9   Average_Total_Payments         163065 non-null  float64 \n"," 10  Average_Medicare_Payment       163065 non-null  float64 \n","dtypes: category(4), float64(2), int64(2), object(3)\n","memory usage: 9.9+ MB\n"]}]},{"cell_type":"markdown","source":["# Feature Engineering"],"metadata":{"id":"kMNIu9Ouylev"}},{"cell_type":"markdown","source":["### 1, Provider charged avergae total payment extremely higher than state average payment by each state"],"metadata":{"id":"3e5pOVYqyc-8"}},{"cell_type":"markdown","source":["As we explored about during EDA, there are a few states have extremely high maximum total payment while their avergae total payment is relatively low among all the states.\n","Thus, here I'm trying to find which providers charged these high payments.\n","I'm using Tukey's fences (Q3 + 1.5 * IQR) to detect extreme high payments."],"metadata":{"id":"sJIeYtWkyrso"}},{"cell_type":"code","source":["# Group the total average charge by state\n","charge_state = df.groupby('Provider_State')['Average_Total_Payments']\n","\n","Q1 = charge_state.quantile(0.25)\n","Q3 = charge_state.quantile(0.75)\n","IQR = Q3 - Q1\n","\n","upper_fence_charge_state = Q3 + 1.5*IQR\n","\n","upper_fence_charge_state.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YYoMC1Yt1yOU","executionInfo":{"status":"ok","timestamp":1689279015075,"user_tz":240,"elapsed":204,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"6e63bc7e-960a-497e-8051-475a735280dc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Provider_State\n","AK    30282.2475\n","AL    15842.3850\n","AR    17526.7600\n","AZ    21814.9000\n","CA    26352.5625\n","Name: Average_Total_Payments, dtype: float64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# Merge the upper fences back to original df\n","\n","df_new = pd.merge(df, upper_fence_charge_state.rename('Charge_Upper_Fence_State'), left_on='Provider_State', right_index=True)\n","\n","df_new.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":510},"id":"ZxGFwNei3d7l","executionInfo":{"status":"ok","timestamp":1689279015076,"user_tz":240,"elapsed":10,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"1a64fe96-47c3-4488-a7c2-e49b4cf06993"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        DRG Provider_Id  \\\n","0  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10001   \n","1  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10005   \n","2  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10006   \n","3  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10011   \n","4  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10016   \n","\n","                      Provider_Name      Provider_StreetAddress Provider_City  \\\n","0  SOUTHEAST ALABAMA MEDICAL CENTER      1108 ROSS CLARK CIRCLE        DOTHAN   \n","1     MARSHALL MEDICAL CENTER SOUTH  2505 U S HIGHWAY 431 NORTH          BOAZ   \n","2    ELIZA COFFEE MEMORIAL HOSPITAL          205 MARENGO STREET      FLORENCE   \n","3                 ST VINCENT'S EAST  50 MEDICAL PARK EAST DRIVE    BIRMINGHAM   \n","4     SHELBY BAPTIST MEDICAL CENTER     1000 FIRST STREET NORTH     ALABASTER   \n","\n","  Provider_State  Provider_Zipcode Hospital_referral_region_desp  \\\n","0             AL             36301                   AL - Dothan   \n","1             AL             35957               AL - Birmingham   \n","2             AL             35631               AL - Birmingham   \n","3             AL             35235               AL - Birmingham   \n","4             AL             35007               AL - Birmingham   \n","\n","   Total_Discharges  Average_Total_Payments  Average_Medicare_Payment  \\\n","0                91                 5777.24                   4763.73   \n","1                14                 5787.57                   4976.71   \n","2                24                 5434.95                   4453.79   \n","3                25                 5417.56                   4129.16   \n","4                18                 5658.33                   4851.44   \n","\n","   Charge_Upper_Fence_State  \n","0                 15842.385  \n","1                 15842.385  \n","2                 15842.385  \n","3                 15842.385  \n","4                 15842.385  "],"text/html":["\n","\n","  <div id=\"df-80494d75-f572-4829-92cc-e794ea392535\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DRG</th>\n","      <th>Provider_Id</th>\n","      <th>Provider_Name</th>\n","      <th>Provider_StreetAddress</th>\n","      <th>Provider_City</th>\n","      <th>Provider_State</th>\n","      <th>Provider_Zipcode</th>\n","      <th>Hospital_referral_region_desp</th>\n","      <th>Total_Discharges</th>\n","      <th>Average_Total_Payments</th>\n","      <th>Average_Medicare_Payment</th>\n","      <th>Charge_Upper_Fence_State</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10001</td>\n","      <td>SOUTHEAST ALABAMA MEDICAL CENTER</td>\n","      <td>1108 ROSS CLARK CIRCLE</td>\n","      <td>DOTHAN</td>\n","      <td>AL</td>\n","      <td>36301</td>\n","      <td>AL - Dothan</td>\n","      <td>91</td>\n","      <td>5777.24</td>\n","      <td>4763.73</td>\n","      <td>15842.385</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10005</td>\n","      <td>MARSHALL MEDICAL CENTER SOUTH</td>\n","      <td>2505 U S HIGHWAY 431 NORTH</td>\n","      <td>BOAZ</td>\n","      <td>AL</td>\n","      <td>35957</td>\n","      <td>AL - Birmingham</td>\n","      <td>14</td>\n","      <td>5787.57</td>\n","      <td>4976.71</td>\n","      <td>15842.385</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10006</td>\n","      <td>ELIZA COFFEE MEMORIAL HOSPITAL</td>\n","      <td>205 MARENGO STREET</td>\n","      <td>FLORENCE</td>\n","      <td>AL</td>\n","      <td>35631</td>\n","      <td>AL - Birmingham</td>\n","      <td>24</td>\n","      <td>5434.95</td>\n","      <td>4453.79</td>\n","      <td>15842.385</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10011</td>\n","      <td>ST VINCENT'S EAST</td>\n","      <td>50 MEDICAL PARK EAST DRIVE</td>\n","      <td>BIRMINGHAM</td>\n","      <td>AL</td>\n","      <td>35235</td>\n","      <td>AL - Birmingham</td>\n","      <td>25</td>\n","      <td>5417.56</td>\n","      <td>4129.16</td>\n","      <td>15842.385</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10016</td>\n","      <td>SHELBY BAPTIST MEDICAL CENTER</td>\n","      <td>1000 FIRST STREET NORTH</td>\n","      <td>ALABASTER</td>\n","      <td>AL</td>\n","      <td>35007</td>\n","      <td>AL - Birmingham</td>\n","      <td>18</td>\n","      <td>5658.33</td>\n","      <td>4851.44</td>\n","      <td>15842.385</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80494d75-f572-4829-92cc-e794ea392535')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-5927f253-463c-4ac0-ab6b-e37b76ec318d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5927f253-463c-4ac0-ab6b-e37b76ec318d')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-5927f253-463c-4ac0-ab6b-e37b76ec318d button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-80494d75-f572-4829-92cc-e794ea392535 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-80494d75-f572-4829-92cc-e794ea392535');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["### Feature Insight:\n","We can see there are many states have providers with extremely high payments compare to the state avergae payment amount. These states can potentially contain health fraud which need us to do further detection."],"metadata":{"id":"zKESWMinul42"}},{"cell_type":"markdown","source":["### 2, Provider charged avergae total payment extremely higher than state average payment on same DRG by each state"],"metadata":{"id":"olWcvbsKxftz"}},{"cell_type":"markdown","source":["Providers can agrue that their paitents has worse situation than patients at other hospital in the same states. So, this time I will calculate the extreme benchmark base on each DRG, which theoretically the cost of similiar diease shall be very close."],"metadata":{"id":"G9YwNWn3x0IV"}},{"cell_type":"code","source":["# Group the total average charge by DRG & state\n","charge_state_drg = df.groupby(['Provider_State', 'DRG'])['Average_Total_Payments']\n","\n","Q1 = charge_state_drg.quantile(0.25)\n","Q3 = charge_state_drg.quantile(0.75)\n","IQR = Q3 - Q1\n","\n","upper_fence_charge_state_drg = Q3 + 1.5*IQR\n","\n","upper_fence_charge_state_drg.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tlkOo3w4xx5k","executionInfo":{"status":"ok","timestamp":1689279015228,"user_tz":240,"elapsed":160,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"e2447fb9-1115-4af7-9da4-5dd76d2ee0fc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Provider_State  DRG                                                            \n","AK              039 - EXTRACRANIAL PROCEDURES W/O CC/MCC                            8401.95000\n","                057 - DEGENERATIVE NERVOUS SYSTEM DISORDERS W/O MCC                 8799.00000\n","                064 - INTRACRANIAL HEMORRHAGE OR CEREBRAL INFARCTION W MCC         29277.99000\n","                065 - INTRACRANIAL HEMORRHAGE OR CEREBRAL INFARCTION W CC          19543.33750\n","                066 - INTRACRANIAL HEMORRHAGE OR CEREBRAL INFARCTION W/O CC/MCC    14344.01375\n","Name: Average_Total_Payments, dtype: float64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# Merge the upper fences back to original df\n","\n","df_new = pd.merge(df_new, upper_fence_charge_state_drg.rename('Charge_Upper_Fence_State_drg'), left_on=['Provider_State', 'DRG'], right_on=['Provider_State', 'DRG'])\n","\n","df_new.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"P4XbOkOj3Mwm","executionInfo":{"status":"ok","timestamp":1689279015228,"user_tz":240,"elapsed":7,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"86c7be25-bdd9-4f5e-a39e-c5d04885ae5a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        DRG Provider_Id  \\\n","0  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10001   \n","1  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10005   \n","2  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10006   \n","3  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10011   \n","4  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10016   \n","\n","                      Provider_Name      Provider_StreetAddress Provider_City  \\\n","0  SOUTHEAST ALABAMA MEDICAL CENTER      1108 ROSS CLARK CIRCLE        DOTHAN   \n","1     MARSHALL MEDICAL CENTER SOUTH  2505 U S HIGHWAY 431 NORTH          BOAZ   \n","2    ELIZA COFFEE MEMORIAL HOSPITAL          205 MARENGO STREET      FLORENCE   \n","3                 ST VINCENT'S EAST  50 MEDICAL PARK EAST DRIVE    BIRMINGHAM   \n","4     SHELBY BAPTIST MEDICAL CENTER     1000 FIRST STREET NORTH     ALABASTER   \n","\n","  Provider_State  Provider_Zipcode Hospital_referral_region_desp  \\\n","0             AL             36301                   AL - Dothan   \n","1             AL             35957               AL - Birmingham   \n","2             AL             35631               AL - Birmingham   \n","3             AL             35235               AL - Birmingham   \n","4             AL             35007               AL - Birmingham   \n","\n","   Total_Discharges  Average_Total_Payments  Average_Medicare_Payment  \\\n","0                91                 5777.24                   4763.73   \n","1                14                 5787.57                   4976.71   \n","2                24                 5434.95                   4453.79   \n","3                25                 5417.56                   4129.16   \n","4                18                 5658.33                   4851.44   \n","\n","   Charge_Upper_Fence_State  Charge_Upper_Fence_State_drg  \n","0                 15842.385                      6611.905  \n","1                 15842.385                      6611.905  \n","2                 15842.385                      6611.905  \n","3                 15842.385                      6611.905  \n","4                 15842.385                      6611.905  "],"text/html":["\n","\n","  <div id=\"df-90b283b8-8e9b-4177-93df-0d606ec169ec\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DRG</th>\n","      <th>Provider_Id</th>\n","      <th>Provider_Name</th>\n","      <th>Provider_StreetAddress</th>\n","      <th>Provider_City</th>\n","      <th>Provider_State</th>\n","      <th>Provider_Zipcode</th>\n","      <th>Hospital_referral_region_desp</th>\n","      <th>Total_Discharges</th>\n","      <th>Average_Total_Payments</th>\n","      <th>Average_Medicare_Payment</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10001</td>\n","      <td>SOUTHEAST ALABAMA MEDICAL CENTER</td>\n","      <td>1108 ROSS CLARK CIRCLE</td>\n","      <td>DOTHAN</td>\n","      <td>AL</td>\n","      <td>36301</td>\n","      <td>AL - Dothan</td>\n","      <td>91</td>\n","      <td>5777.24</td>\n","      <td>4763.73</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10005</td>\n","      <td>MARSHALL MEDICAL CENTER SOUTH</td>\n","      <td>2505 U S HIGHWAY 431 NORTH</td>\n","      <td>BOAZ</td>\n","      <td>AL</td>\n","      <td>35957</td>\n","      <td>AL - Birmingham</td>\n","      <td>14</td>\n","      <td>5787.57</td>\n","      <td>4976.71</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10006</td>\n","      <td>ELIZA COFFEE MEMORIAL HOSPITAL</td>\n","      <td>205 MARENGO STREET</td>\n","      <td>FLORENCE</td>\n","      <td>AL</td>\n","      <td>35631</td>\n","      <td>AL - Birmingham</td>\n","      <td>24</td>\n","      <td>5434.95</td>\n","      <td>4453.79</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10011</td>\n","      <td>ST VINCENT'S EAST</td>\n","      <td>50 MEDICAL PARK EAST DRIVE</td>\n","      <td>BIRMINGHAM</td>\n","      <td>AL</td>\n","      <td>35235</td>\n","      <td>AL - Birmingham</td>\n","      <td>25</td>\n","      <td>5417.56</td>\n","      <td>4129.16</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10016</td>\n","      <td>SHELBY BAPTIST MEDICAL CENTER</td>\n","      <td>1000 FIRST STREET NORTH</td>\n","      <td>ALABASTER</td>\n","      <td>AL</td>\n","      <td>35007</td>\n","      <td>AL - Birmingham</td>\n","      <td>18</td>\n","      <td>5658.33</td>\n","      <td>4851.44</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90b283b8-8e9b-4177-93df-0d606ec169ec')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-22be906e-8877-48a6-b504-e3bf20c99b58\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-22be906e-8877-48a6-b504-e3bf20c99b58')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-22be906e-8877-48a6-b504-e3bf20c99b58 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-90b283b8-8e9b-4177-93df-0d606ec169ec button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-90b283b8-8e9b-4177-93df-0d606ec169ec');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["### Feature Insight:\n","We can see some significiant changes from above results, which can prove that there is price gap between diffenret DRG treatments. After considering the different cost of DRGs, states like AK, VT and WY have almost no pontential frauds. But CA seems to have less pontential frauds than without consider DRG types, which refer to that CA providers usually offer treatment with higher real price. However, this can also lead to pontential fraud that, instead of charge higher price on normal treatment, CA providers may exaggerating the condition in order to induce patients to choose more expensive treatments."],"metadata":{"id":"melEV-4r7zvV"}},{"cell_type":"markdown","source":["### 3，Provider charged avergae total payment extremely higher than state average payment on smae DRG by each zipcode"],"metadata":{"id":"aLZUXQb3SrsS"}},{"cell_type":"markdown","source":["Similiar to previous feature, but this one narrow the compare range from state to zipcode, with shall provide more accurate benchmark for fraud dtecttion."],"metadata":{"id":"mJLndcI0S3Tk"}},{"cell_type":"code","source":["# Group the total average charge by DRG & state\n","charge_zip_drg = df.groupby(['Provider_Zipcode', 'DRG'])['Average_Total_Payments']\n","\n","Q1 = charge_zip_drg.quantile(0.25)\n","Q3 = charge_zip_drg.quantile(0.75)\n","IQR = Q3 - Q1\n","\n","upper_fence_charge_zip_drg = Q3 + 1.5*IQR\n","\n","# Merge the upper fences back to original df\n","\n","df_new = pd.merge(df_new, upper_fence_charge_zip_drg.rename('Charge_Upper_Fence_zip_drg'),\n","                  left_on=['Provider_Zipcode', 'DRG'], right_on=['Provider_Zipcode', 'DRG'])\n","\n","df_new.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"KRvJAgbJThg8","executionInfo":{"status":"ok","timestamp":1689279015670,"user_tz":240,"elapsed":448,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"dc3141aa-cd13-4cba-9229-433e01caf18c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        DRG Provider_Id  \\\n","0  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10001   \n","1  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10005   \n","2  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10006   \n","3  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10011   \n","4  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10016   \n","\n","                      Provider_Name      Provider_StreetAddress Provider_City  \\\n","0  SOUTHEAST ALABAMA MEDICAL CENTER      1108 ROSS CLARK CIRCLE        DOTHAN   \n","1     MARSHALL MEDICAL CENTER SOUTH  2505 U S HIGHWAY 431 NORTH          BOAZ   \n","2    ELIZA COFFEE MEMORIAL HOSPITAL          205 MARENGO STREET      FLORENCE   \n","3                 ST VINCENT'S EAST  50 MEDICAL PARK EAST DRIVE    BIRMINGHAM   \n","4     SHELBY BAPTIST MEDICAL CENTER     1000 FIRST STREET NORTH     ALABASTER   \n","\n","  Provider_State  Provider_Zipcode Hospital_referral_region_desp  \\\n","0             AL             36301                   AL - Dothan   \n","1             AL             35957               AL - Birmingham   \n","2             AL             35631               AL - Birmingham   \n","3             AL             35235               AL - Birmingham   \n","4             AL             35007               AL - Birmingham   \n","\n","   Total_Discharges  Average_Total_Payments  Average_Medicare_Payment  \\\n","0                91                 5777.24                   4763.73   \n","1                14                 5787.57                   4976.71   \n","2                24                 5434.95                   4453.79   \n","3                25                 5417.56                   4129.16   \n","4                18                 5658.33                   4851.44   \n","\n","   Charge_Upper_Fence_State  Charge_Upper_Fence_State_drg  \\\n","0                 15842.385                      6611.905   \n","1                 15842.385                      6611.905   \n","2                 15842.385                      6611.905   \n","3                 15842.385                      6611.905   \n","4                 15842.385                      6611.905   \n","\n","   Charge_Upper_Fence_zip_drg  \n","0                     5777.24  \n","1                     5787.57  \n","2                     5434.95  \n","3                     5417.56  \n","4                     5658.33  "],"text/html":["\n","\n","  <div id=\"df-89f14109-dbb2-4778-aa90-c3a4d862543b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DRG</th>\n","      <th>Provider_Id</th>\n","      <th>Provider_Name</th>\n","      <th>Provider_StreetAddress</th>\n","      <th>Provider_City</th>\n","      <th>Provider_State</th>\n","      <th>Provider_Zipcode</th>\n","      <th>Hospital_referral_region_desp</th>\n","      <th>Total_Discharges</th>\n","      <th>Average_Total_Payments</th>\n","      <th>Average_Medicare_Payment</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>Charge_Upper_Fence_zip_drg</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10001</td>\n","      <td>SOUTHEAST ALABAMA MEDICAL CENTER</td>\n","      <td>1108 ROSS CLARK CIRCLE</td>\n","      <td>DOTHAN</td>\n","      <td>AL</td>\n","      <td>36301</td>\n","      <td>AL - Dothan</td>\n","      <td>91</td>\n","      <td>5777.24</td>\n","      <td>4763.73</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5777.24</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10005</td>\n","      <td>MARSHALL MEDICAL CENTER SOUTH</td>\n","      <td>2505 U S HIGHWAY 431 NORTH</td>\n","      <td>BOAZ</td>\n","      <td>AL</td>\n","      <td>35957</td>\n","      <td>AL - Birmingham</td>\n","      <td>14</td>\n","      <td>5787.57</td>\n","      <td>4976.71</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5787.57</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10006</td>\n","      <td>ELIZA COFFEE MEMORIAL HOSPITAL</td>\n","      <td>205 MARENGO STREET</td>\n","      <td>FLORENCE</td>\n","      <td>AL</td>\n","      <td>35631</td>\n","      <td>AL - Birmingham</td>\n","      <td>24</td>\n","      <td>5434.95</td>\n","      <td>4453.79</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5434.95</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10011</td>\n","      <td>ST VINCENT'S EAST</td>\n","      <td>50 MEDICAL PARK EAST DRIVE</td>\n","      <td>BIRMINGHAM</td>\n","      <td>AL</td>\n","      <td>35235</td>\n","      <td>AL - Birmingham</td>\n","      <td>25</td>\n","      <td>5417.56</td>\n","      <td>4129.16</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5417.56</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10016</td>\n","      <td>SHELBY BAPTIST MEDICAL CENTER</td>\n","      <td>1000 FIRST STREET NORTH</td>\n","      <td>ALABASTER</td>\n","      <td>AL</td>\n","      <td>35007</td>\n","      <td>AL - Birmingham</td>\n","      <td>18</td>\n","      <td>5658.33</td>\n","      <td>4851.44</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5658.33</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89f14109-dbb2-4778-aa90-c3a4d862543b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-3a3cc7b5-3c6e-421d-9a37-298ba1ce2ad9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a3cc7b5-3c6e-421d-9a37-298ba1ce2ad9')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-3a3cc7b5-3c6e-421d-9a37-298ba1ce2ad9 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-89f14109-dbb2-4778-aa90-c3a4d862543b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-89f14109-dbb2-4778-aa90-c3a4d862543b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["### Feature Insight:\n","This feature lead to a more narrow range of peer of each provider that offer a more accurate reference for normal average total payment. So we can better detect anomaly payment amount to find potential fraud."],"metadata":{"id":"XTSYSeQvXLSZ"}},{"cell_type":"markdown","source":["### 4, Average DRG frequency recorded in each state"],"metadata":{"id":"k623YN0l91YP"}},{"cell_type":"markdown","source":["As explained above, fraud can happen not only by charge extra fee, but can also by frequently using expensive treatment on all kinds of paitents. So we can calculate the avergae DRG frequency of states to evaluate if providers are choosing reasonable treatments or not."],"metadata":{"id":"ptxH0Aym-SS8"}},{"cell_type":"code","source":["# Calculate the average DRG frequency of states\n","\n","drg_avg_freq_state = df.groupby(['Provider_State', 'DRG'])['Total_Discharges'].mean().reset_index()\n","drg_avg_freq_state.columns =['Provider_State', 'DRG', 'state_avg_drg_frq']\n","\n","df_new = pd.merge(df_new, drg_avg_freq_state, on = ['Provider_State', 'DRG'])\n","\n","df_new.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"67x57SfqEgVN","executionInfo":{"status":"ok","timestamp":1689279015865,"user_tz":240,"elapsed":205,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"b859946d-8fd8-4de1-da71-45539a74fb6e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        DRG Provider_Id  \\\n","0  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10001   \n","1  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10005   \n","2  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10006   \n","3  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10011   \n","4  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10016   \n","\n","                      Provider_Name      Provider_StreetAddress Provider_City  \\\n","0  SOUTHEAST ALABAMA MEDICAL CENTER      1108 ROSS CLARK CIRCLE        DOTHAN   \n","1     MARSHALL MEDICAL CENTER SOUTH  2505 U S HIGHWAY 431 NORTH          BOAZ   \n","2    ELIZA COFFEE MEMORIAL HOSPITAL          205 MARENGO STREET      FLORENCE   \n","3                 ST VINCENT'S EAST  50 MEDICAL PARK EAST DRIVE    BIRMINGHAM   \n","4     SHELBY BAPTIST MEDICAL CENTER     1000 FIRST STREET NORTH     ALABASTER   \n","\n","  Provider_State  Provider_Zipcode Hospital_referral_region_desp  \\\n","0             AL             36301                   AL - Dothan   \n","1             AL             35957               AL - Birmingham   \n","2             AL             35631               AL - Birmingham   \n","3             AL             35235               AL - Birmingham   \n","4             AL             35007               AL - Birmingham   \n","\n","   Total_Discharges  Average_Total_Payments  Average_Medicare_Payment  \\\n","0                91                 5777.24                   4763.73   \n","1                14                 5787.57                   4976.71   \n","2                24                 5434.95                   4453.79   \n","3                25                 5417.56                   4129.16   \n","4                18                 5658.33                   4851.44   \n","\n","   Charge_Upper_Fence_State  Charge_Upper_Fence_State_drg  \\\n","0                 15842.385                      6611.905   \n","1                 15842.385                      6611.905   \n","2                 15842.385                      6611.905   \n","3                 15842.385                      6611.905   \n","4                 15842.385                      6611.905   \n","\n","   Charge_Upper_Fence_zip_drg  state_avg_drg_frq  \n","0                     5777.24          38.217391  \n","1                     5787.57          38.217391  \n","2                     5434.95          38.217391  \n","3                     5417.56          38.217391  \n","4                     5658.33          38.217391  "],"text/html":["\n","\n","  <div id=\"df-38694c8b-d008-44d5-87fb-e3642b8c84e8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DRG</th>\n","      <th>Provider_Id</th>\n","      <th>Provider_Name</th>\n","      <th>Provider_StreetAddress</th>\n","      <th>Provider_City</th>\n","      <th>Provider_State</th>\n","      <th>Provider_Zipcode</th>\n","      <th>Hospital_referral_region_desp</th>\n","      <th>Total_Discharges</th>\n","      <th>Average_Total_Payments</th>\n","      <th>Average_Medicare_Payment</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>Charge_Upper_Fence_zip_drg</th>\n","      <th>state_avg_drg_frq</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10001</td>\n","      <td>SOUTHEAST ALABAMA MEDICAL CENTER</td>\n","      <td>1108 ROSS CLARK CIRCLE</td>\n","      <td>DOTHAN</td>\n","      <td>AL</td>\n","      <td>36301</td>\n","      <td>AL - Dothan</td>\n","      <td>91</td>\n","      <td>5777.24</td>\n","      <td>4763.73</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5777.24</td>\n","      <td>38.217391</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10005</td>\n","      <td>MARSHALL MEDICAL CENTER SOUTH</td>\n","      <td>2505 U S HIGHWAY 431 NORTH</td>\n","      <td>BOAZ</td>\n","      <td>AL</td>\n","      <td>35957</td>\n","      <td>AL - Birmingham</td>\n","      <td>14</td>\n","      <td>5787.57</td>\n","      <td>4976.71</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5787.57</td>\n","      <td>38.217391</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10006</td>\n","      <td>ELIZA COFFEE MEMORIAL HOSPITAL</td>\n","      <td>205 MARENGO STREET</td>\n","      <td>FLORENCE</td>\n","      <td>AL</td>\n","      <td>35631</td>\n","      <td>AL - Birmingham</td>\n","      <td>24</td>\n","      <td>5434.95</td>\n","      <td>4453.79</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5434.95</td>\n","      <td>38.217391</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10011</td>\n","      <td>ST VINCENT'S EAST</td>\n","      <td>50 MEDICAL PARK EAST DRIVE</td>\n","      <td>BIRMINGHAM</td>\n","      <td>AL</td>\n","      <td>35235</td>\n","      <td>AL - Birmingham</td>\n","      <td>25</td>\n","      <td>5417.56</td>\n","      <td>4129.16</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5417.56</td>\n","      <td>38.217391</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10016</td>\n","      <td>SHELBY BAPTIST MEDICAL CENTER</td>\n","      <td>1000 FIRST STREET NORTH</td>\n","      <td>ALABASTER</td>\n","      <td>AL</td>\n","      <td>35007</td>\n","      <td>AL - Birmingham</td>\n","      <td>18</td>\n","      <td>5658.33</td>\n","      <td>4851.44</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5658.33</td>\n","      <td>38.217391</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38694c8b-d008-44d5-87fb-e3642b8c84e8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-ac24ee08-013e-4f4a-b25f-6f209c24792a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ac24ee08-013e-4f4a-b25f-6f209c24792a')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-ac24ee08-013e-4f4a-b25f-6f209c24792a button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-38694c8b-d008-44d5-87fb-e3642b8c84e8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-38694c8b-d008-44d5-87fb-e3642b8c84e8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["### Feature Insight:\n","This feature helps us to detect unusual high frequenctly apperance of certain DRG. We can track it down to providers and DRG types to see what are detailed reason of pontential health fraud."],"metadata":{"id":"jg9bQ34OJFxI"}},{"cell_type":"markdown","source":["### 5, Provider Average Discharge Numbers"],"metadata":{"id":"115T-s7sJxju"}},{"cell_type":"code","source":["# Calculate the average discharge number per provider of states\n","\n","state_avg_discharge = df.groupby(['Provider_State'])['Total_Discharges'].mean().astype(int).reset_index()\n","state_avg_discharge.columns =['Provider_State', 'state_avg_discharge']\n","\n","df_new = pd.merge(df_new, state_avg_discharge, on = ['Provider_State'])\n","\n","df_new.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"GB8o3wh0KKvc","executionInfo":{"status":"ok","timestamp":1689279015865,"user_tz":240,"elapsed":19,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"edaa3207-0582-4b8d-a949-f760631979bf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        DRG Provider_Id  \\\n","0  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10001   \n","1  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10005   \n","2  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10006   \n","3  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10011   \n","4  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10016   \n","\n","                      Provider_Name      Provider_StreetAddress Provider_City  \\\n","0  SOUTHEAST ALABAMA MEDICAL CENTER      1108 ROSS CLARK CIRCLE        DOTHAN   \n","1     MARSHALL MEDICAL CENTER SOUTH  2505 U S HIGHWAY 431 NORTH          BOAZ   \n","2    ELIZA COFFEE MEMORIAL HOSPITAL          205 MARENGO STREET      FLORENCE   \n","3                 ST VINCENT'S EAST  50 MEDICAL PARK EAST DRIVE    BIRMINGHAM   \n","4     SHELBY BAPTIST MEDICAL CENTER     1000 FIRST STREET NORTH     ALABASTER   \n","\n","  Provider_State  Provider_Zipcode Hospital_referral_region_desp  \\\n","0             AL             36301                   AL - Dothan   \n","1             AL             35957               AL - Birmingham   \n","2             AL             35631               AL - Birmingham   \n","3             AL             35235               AL - Birmingham   \n","4             AL             35007               AL - Birmingham   \n","\n","   Total_Discharges  Average_Total_Payments  Average_Medicare_Payment  \\\n","0                91                 5777.24                   4763.73   \n","1                14                 5787.57                   4976.71   \n","2                24                 5434.95                   4453.79   \n","3                25                 5417.56                   4129.16   \n","4                18                 5658.33                   4851.44   \n","\n","   Charge_Upper_Fence_State  Charge_Upper_Fence_State_drg  \\\n","0                 15842.385                      6611.905   \n","1                 15842.385                      6611.905   \n","2                 15842.385                      6611.905   \n","3                 15842.385                      6611.905   \n","4                 15842.385                      6611.905   \n","\n","   Charge_Upper_Fence_zip_drg  state_avg_drg_frq  state_avg_discharge  \n","0                     5777.24          38.217391                   39  \n","1                     5787.57          38.217391                   39  \n","2                     5434.95          38.217391                   39  \n","3                     5417.56          38.217391                   39  \n","4                     5658.33          38.217391                   39  "],"text/html":["\n","\n","  <div id=\"df-37fd9703-ce8c-4925-bf54-67b7c9c93caa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DRG</th>\n","      <th>Provider_Id</th>\n","      <th>Provider_Name</th>\n","      <th>Provider_StreetAddress</th>\n","      <th>Provider_City</th>\n","      <th>Provider_State</th>\n","      <th>Provider_Zipcode</th>\n","      <th>Hospital_referral_region_desp</th>\n","      <th>Total_Discharges</th>\n","      <th>Average_Total_Payments</th>\n","      <th>Average_Medicare_Payment</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>Charge_Upper_Fence_zip_drg</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>state_avg_discharge</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10001</td>\n","      <td>SOUTHEAST ALABAMA MEDICAL CENTER</td>\n","      <td>1108 ROSS CLARK CIRCLE</td>\n","      <td>DOTHAN</td>\n","      <td>AL</td>\n","      <td>36301</td>\n","      <td>AL - Dothan</td>\n","      <td>91</td>\n","      <td>5777.24</td>\n","      <td>4763.73</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5777.24</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10005</td>\n","      <td>MARSHALL MEDICAL CENTER SOUTH</td>\n","      <td>2505 U S HIGHWAY 431 NORTH</td>\n","      <td>BOAZ</td>\n","      <td>AL</td>\n","      <td>35957</td>\n","      <td>AL - Birmingham</td>\n","      <td>14</td>\n","      <td>5787.57</td>\n","      <td>4976.71</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5787.57</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10006</td>\n","      <td>ELIZA COFFEE MEMORIAL HOSPITAL</td>\n","      <td>205 MARENGO STREET</td>\n","      <td>FLORENCE</td>\n","      <td>AL</td>\n","      <td>35631</td>\n","      <td>AL - Birmingham</td>\n","      <td>24</td>\n","      <td>5434.95</td>\n","      <td>4453.79</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5434.95</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10011</td>\n","      <td>ST VINCENT'S EAST</td>\n","      <td>50 MEDICAL PARK EAST DRIVE</td>\n","      <td>BIRMINGHAM</td>\n","      <td>AL</td>\n","      <td>35235</td>\n","      <td>AL - Birmingham</td>\n","      <td>25</td>\n","      <td>5417.56</td>\n","      <td>4129.16</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5417.56</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10016</td>\n","      <td>SHELBY BAPTIST MEDICAL CENTER</td>\n","      <td>1000 FIRST STREET NORTH</td>\n","      <td>ALABASTER</td>\n","      <td>AL</td>\n","      <td>35007</td>\n","      <td>AL - Birmingham</td>\n","      <td>18</td>\n","      <td>5658.33</td>\n","      <td>4851.44</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5658.33</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37fd9703-ce8c-4925-bf54-67b7c9c93caa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-44bba57a-5bb2-488b-a34a-11cdc79ecf84\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-44bba57a-5bb2-488b-a34a-11cdc79ecf84')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-44bba57a-5bb2-488b-a34a-11cdc79ecf84 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-37fd9703-ce8c-4925-bf54-67b7c9c93caa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-37fd9703-ce8c-4925-bf54-67b7c9c93caa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["### Feature Insight:\n","This feature can help us detect whcih providers has more discharges than state average number, which may refer too frequent paitent visits. This could be the result of non-compliance with the requirement for patients to plainly revisit the clinic in order to charge multiple times."],"metadata":{"id":"E1mdGFYSMl07"}},{"cell_type":"markdown","source":["### 6,Type of DRG recorded for each Provider"],"metadata":{"id":"m1U-XW4INRzF"}},{"cell_type":"code","source":["\n","df_new['Provider_DRG_Count'] = df.groupby('Provider_Id')['DRG'].transform('nunique')\n","\n","df_new['Provider_DRG_Count_state'] = df.groupby('Provider_State')['DRG'].transform('nunique').mean()\n","\n","\n","df_new.head()"],"metadata":{"id":"kSRNRtwyX5sF","colab":{"base_uri":"https://localhost:8080/","height":530},"executionInfo":{"status":"ok","timestamp":1689279015866,"user_tz":240,"elapsed":18,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"175b99a4-50e0-4949-de11-8bffdac7740f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        DRG Provider_Id  \\\n","0  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10001   \n","1  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10005   \n","2  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10006   \n","3  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10011   \n","4  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10016   \n","\n","                      Provider_Name      Provider_StreetAddress Provider_City  \\\n","0  SOUTHEAST ALABAMA MEDICAL CENTER      1108 ROSS CLARK CIRCLE        DOTHAN   \n","1     MARSHALL MEDICAL CENTER SOUTH  2505 U S HIGHWAY 431 NORTH          BOAZ   \n","2    ELIZA COFFEE MEMORIAL HOSPITAL          205 MARENGO STREET      FLORENCE   \n","3                 ST VINCENT'S EAST  50 MEDICAL PARK EAST DRIVE    BIRMINGHAM   \n","4     SHELBY BAPTIST MEDICAL CENTER     1000 FIRST STREET NORTH     ALABASTER   \n","\n","  Provider_State  Provider_Zipcode Hospital_referral_region_desp  \\\n","0             AL             36301                   AL - Dothan   \n","1             AL             35957               AL - Birmingham   \n","2             AL             35631               AL - Birmingham   \n","3             AL             35235               AL - Birmingham   \n","4             AL             35007               AL - Birmingham   \n","\n","   Total_Discharges  Average_Total_Payments  Average_Medicare_Payment  \\\n","0                91                 5777.24                   4763.73   \n","1                14                 5787.57                   4976.71   \n","2                24                 5434.95                   4453.79   \n","3                25                 5417.56                   4129.16   \n","4                18                 5658.33                   4851.44   \n","\n","   Charge_Upper_Fence_State  Charge_Upper_Fence_State_drg  \\\n","0                 15842.385                      6611.905   \n","1                 15842.385                      6611.905   \n","2                 15842.385                      6611.905   \n","3                 15842.385                      6611.905   \n","4                 15842.385                      6611.905   \n","\n","   Charge_Upper_Fence_zip_drg  state_avg_drg_frq  state_avg_discharge  \\\n","0                     5777.24          38.217391                   39   \n","1                     5787.57          38.217391                   39   \n","2                     5434.95          38.217391                   39   \n","3                     5417.56          38.217391                   39   \n","4                     5658.33          38.217391                   39   \n","\n","   Provider_DRG_Count  Provider_DRG_Count_state  \n","0                  92                 99.827688  \n","1                  49                 99.827688  \n","2                  86                 99.827688  \n","3                  87                 99.827688  \n","4                  80                 99.827688  "],"text/html":["\n","\n","  <div id=\"df-0ed2c915-a4b1-4c09-ae64-d0e8e9dc0c0f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DRG</th>\n","      <th>Provider_Id</th>\n","      <th>Provider_Name</th>\n","      <th>Provider_StreetAddress</th>\n","      <th>Provider_City</th>\n","      <th>Provider_State</th>\n","      <th>Provider_Zipcode</th>\n","      <th>Hospital_referral_region_desp</th>\n","      <th>Total_Discharges</th>\n","      <th>Average_Total_Payments</th>\n","      <th>Average_Medicare_Payment</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>Charge_Upper_Fence_zip_drg</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>state_avg_discharge</th>\n","      <th>Provider_DRG_Count</th>\n","      <th>Provider_DRG_Count_state</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10001</td>\n","      <td>SOUTHEAST ALABAMA MEDICAL CENTER</td>\n","      <td>1108 ROSS CLARK CIRCLE</td>\n","      <td>DOTHAN</td>\n","      <td>AL</td>\n","      <td>36301</td>\n","      <td>AL - Dothan</td>\n","      <td>91</td>\n","      <td>5777.24</td>\n","      <td>4763.73</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5777.24</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>92</td>\n","      <td>99.827688</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10005</td>\n","      <td>MARSHALL MEDICAL CENTER SOUTH</td>\n","      <td>2505 U S HIGHWAY 431 NORTH</td>\n","      <td>BOAZ</td>\n","      <td>AL</td>\n","      <td>35957</td>\n","      <td>AL - Birmingham</td>\n","      <td>14</td>\n","      <td>5787.57</td>\n","      <td>4976.71</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5787.57</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>49</td>\n","      <td>99.827688</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10006</td>\n","      <td>ELIZA COFFEE MEMORIAL HOSPITAL</td>\n","      <td>205 MARENGO STREET</td>\n","      <td>FLORENCE</td>\n","      <td>AL</td>\n","      <td>35631</td>\n","      <td>AL - Birmingham</td>\n","      <td>24</td>\n","      <td>5434.95</td>\n","      <td>4453.79</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5434.95</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>86</td>\n","      <td>99.827688</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10011</td>\n","      <td>ST VINCENT'S EAST</td>\n","      <td>50 MEDICAL PARK EAST DRIVE</td>\n","      <td>BIRMINGHAM</td>\n","      <td>AL</td>\n","      <td>35235</td>\n","      <td>AL - Birmingham</td>\n","      <td>25</td>\n","      <td>5417.56</td>\n","      <td>4129.16</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5417.56</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>87</td>\n","      <td>99.827688</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10016</td>\n","      <td>SHELBY BAPTIST MEDICAL CENTER</td>\n","      <td>1000 FIRST STREET NORTH</td>\n","      <td>ALABASTER</td>\n","      <td>AL</td>\n","      <td>35007</td>\n","      <td>AL - Birmingham</td>\n","      <td>18</td>\n","      <td>5658.33</td>\n","      <td>4851.44</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5658.33</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>80</td>\n","      <td>99.827688</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ed2c915-a4b1-4c09-ae64-d0e8e9dc0c0f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-8b08b9e5-4f1d-40e1-9442-28cf49bfd675\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8b08b9e5-4f1d-40e1-9442-28cf49bfd675')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-8b08b9e5-4f1d-40e1-9442-28cf49bfd675 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0ed2c915-a4b1-4c09-ae64-d0e8e9dc0c0f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0ed2c915-a4b1-4c09-ae64-d0e8e9dc0c0f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["### Feature Insight:\n","The number of unique DRGs recorded by each provider. A provider with an unusually high number of different DRGs might be a sign of DRG upcoding."],"metadata":{"id":"F4cgFaBoaUnp"}},{"cell_type":"markdown","source":["### 7, Average Total Payment Standard Deviation of each Provider"],"metadata":{"id":"s783JhDyadUt"}},{"cell_type":"markdown","source":["A provider should has relatively stable patient group, which lead to stable DRG and payment. So if a provider has extremely shifts on the average total payment, it may doing upcoding or unbundling on some paitents."],"metadata":{"id":"0vgMLgDMLv5Q"}},{"cell_type":"code","source":["df_new['Provider_Payment_Standard_Deviation'] = df.groupby('Provider_Id')['Average_Total_Payments'].transform('std')\n","# Since paitent type is too broad if count the whole state, use the regional data might be more reasonable\n","df_new['Region_Payment_Standard_Deviation'] = df.groupby('Hospital_referral_region_desp')['Average_Total_Payments'].transform('std')\n","\n","df_new.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"G67lTASSN7gv","executionInfo":{"status":"ok","timestamp":1689279016025,"user_tz":240,"elapsed":177,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"a8017532-87d8-4a01-82bc-7cde12d35913"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        DRG Provider_Id  \\\n","0  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10001   \n","1  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10005   \n","2  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10006   \n","3  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10011   \n","4  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10016   \n","\n","                      Provider_Name      Provider_StreetAddress Provider_City  \\\n","0  SOUTHEAST ALABAMA MEDICAL CENTER      1108 ROSS CLARK CIRCLE        DOTHAN   \n","1     MARSHALL MEDICAL CENTER SOUTH  2505 U S HIGHWAY 431 NORTH          BOAZ   \n","2    ELIZA COFFEE MEMORIAL HOSPITAL          205 MARENGO STREET      FLORENCE   \n","3                 ST VINCENT'S EAST  50 MEDICAL PARK EAST DRIVE    BIRMINGHAM   \n","4     SHELBY BAPTIST MEDICAL CENTER     1000 FIRST STREET NORTH     ALABASTER   \n","\n","  Provider_State  Provider_Zipcode Hospital_referral_region_desp  \\\n","0             AL             36301                   AL - Dothan   \n","1             AL             35957               AL - Birmingham   \n","2             AL             35631               AL - Birmingham   \n","3             AL             35235               AL - Birmingham   \n","4             AL             35007               AL - Birmingham   \n","\n","   Total_Discharges  Average_Total_Payments  Average_Medicare_Payment  \\\n","0                91                 5777.24                   4763.73   \n","1                14                 5787.57                   4976.71   \n","2                24                 5434.95                   4453.79   \n","3                25                 5417.56                   4129.16   \n","4                18                 5658.33                   4851.44   \n","\n","   Charge_Upper_Fence_State  Charge_Upper_Fence_State_drg  \\\n","0                 15842.385                      6611.905   \n","1                 15842.385                      6611.905   \n","2                 15842.385                      6611.905   \n","3                 15842.385                      6611.905   \n","4                 15842.385                      6611.905   \n","\n","   Charge_Upper_Fence_zip_drg  state_avg_drg_frq  state_avg_discharge  \\\n","0                     5777.24          38.217391                   39   \n","1                     5787.57          38.217391                   39   \n","2                     5434.95          38.217391                   39   \n","3                     5417.56          38.217391                   39   \n","4                     5658.33          38.217391                   39   \n","\n","   Provider_DRG_Count  Provider_DRG_Count_state  \\\n","0                  92                 99.827688   \n","1                  49                 99.827688   \n","2                  86                 99.827688   \n","3                  87                 99.827688   \n","4                  80                 99.827688   \n","\n","   Provider_Payment_Standard_Deviation  Region_Payment_Standard_Deviation  \n","0                          6038.338768                        4612.285731  \n","1                          2717.731770                        5410.640598  \n","2                          5630.866929                        5410.640598  \n","3                          5546.045094                        5410.640598  \n","4                          4550.105983                        5410.640598  "],"text/html":["\n","\n","  <div id=\"df-5a6ffe71-28b7-4326-ab99-3f81b7f17623\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DRG</th>\n","      <th>Provider_Id</th>\n","      <th>Provider_Name</th>\n","      <th>Provider_StreetAddress</th>\n","      <th>Provider_City</th>\n","      <th>Provider_State</th>\n","      <th>Provider_Zipcode</th>\n","      <th>Hospital_referral_region_desp</th>\n","      <th>Total_Discharges</th>\n","      <th>Average_Total_Payments</th>\n","      <th>Average_Medicare_Payment</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>Charge_Upper_Fence_zip_drg</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>state_avg_discharge</th>\n","      <th>Provider_DRG_Count</th>\n","      <th>Provider_DRG_Count_state</th>\n","      <th>Provider_Payment_Standard_Deviation</th>\n","      <th>Region_Payment_Standard_Deviation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10001</td>\n","      <td>SOUTHEAST ALABAMA MEDICAL CENTER</td>\n","      <td>1108 ROSS CLARK CIRCLE</td>\n","      <td>DOTHAN</td>\n","      <td>AL</td>\n","      <td>36301</td>\n","      <td>AL - Dothan</td>\n","      <td>91</td>\n","      <td>5777.24</td>\n","      <td>4763.73</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5777.24</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>92</td>\n","      <td>99.827688</td>\n","      <td>6038.338768</td>\n","      <td>4612.285731</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10005</td>\n","      <td>MARSHALL MEDICAL CENTER SOUTH</td>\n","      <td>2505 U S HIGHWAY 431 NORTH</td>\n","      <td>BOAZ</td>\n","      <td>AL</td>\n","      <td>35957</td>\n","      <td>AL - Birmingham</td>\n","      <td>14</td>\n","      <td>5787.57</td>\n","      <td>4976.71</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5787.57</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>49</td>\n","      <td>99.827688</td>\n","      <td>2717.731770</td>\n","      <td>5410.640598</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10006</td>\n","      <td>ELIZA COFFEE MEMORIAL HOSPITAL</td>\n","      <td>205 MARENGO STREET</td>\n","      <td>FLORENCE</td>\n","      <td>AL</td>\n","      <td>35631</td>\n","      <td>AL - Birmingham</td>\n","      <td>24</td>\n","      <td>5434.95</td>\n","      <td>4453.79</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5434.95</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>86</td>\n","      <td>99.827688</td>\n","      <td>5630.866929</td>\n","      <td>5410.640598</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10011</td>\n","      <td>ST VINCENT'S EAST</td>\n","      <td>50 MEDICAL PARK EAST DRIVE</td>\n","      <td>BIRMINGHAM</td>\n","      <td>AL</td>\n","      <td>35235</td>\n","      <td>AL - Birmingham</td>\n","      <td>25</td>\n","      <td>5417.56</td>\n","      <td>4129.16</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5417.56</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>87</td>\n","      <td>99.827688</td>\n","      <td>5546.045094</td>\n","      <td>5410.640598</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10016</td>\n","      <td>SHELBY BAPTIST MEDICAL CENTER</td>\n","      <td>1000 FIRST STREET NORTH</td>\n","      <td>ALABASTER</td>\n","      <td>AL</td>\n","      <td>35007</td>\n","      <td>AL - Birmingham</td>\n","      <td>18</td>\n","      <td>5658.33</td>\n","      <td>4851.44</td>\n","      <td>15842.385</td>\n","      <td>6611.905</td>\n","      <td>5658.33</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>80</td>\n","      <td>99.827688</td>\n","      <td>4550.105983</td>\n","      <td>5410.640598</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a6ffe71-28b7-4326-ab99-3f81b7f17623')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-faffc5ab-7963-4ceb-b3ac-0eba7016a2b6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-faffc5ab-7963-4ceb-b3ac-0eba7016a2b6')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-faffc5ab-7963-4ceb-b3ac-0eba7016a2b6 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5a6ffe71-28b7-4326-ab99-3f81b7f17623 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5a6ffe71-28b7-4326-ab99-3f81b7f17623');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["### Feature Insight:\n","This feature shows average total payment for each hospital referral region. Significant deviations from this regional average could indicate potential fraud."],"metadata":{"id":"04l9h8wnV46Z"}},{"cell_type":"markdown","source":["### 8, Average payment per discharge of each DRG by Provider"],"metadata":{"id":"n4LxU-BnXoYm"}},{"cell_type":"markdown","source":["There can be a situation that provider give paitents the approperaite treatments and does not ask the paitent to come back too oftern. But they charge more than regular price each time the paitent comes."],"metadata":{"id":"sOy-J_XXX7-Y"}},{"cell_type":"code","source":["df_new['Payment_per_Discharge_Provider'] = df['Average_Total_Payments'] / df['Total_Discharges']\n","\n","df_new['Payment_per_Discharge_State'] = df.groupby(['Provider_State', 'DRG'])['Average_Total_Payments'].transform('sum') / df.groupby(['Provider_State', 'DRG'])['Total_Discharges'].transform('sum')\n","\n","\n","\n","df_new.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":560},"id":"BWKAMDNkcA4b","executionInfo":{"status":"ok","timestamp":1689279016025,"user_tz":240,"elapsed":7,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"ab6da77c-ee1e-4870-f969-2f290f895d92"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        DRG Provider_Id  \\\n","0  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10001   \n","1  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10005   \n","2  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10006   \n","3  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10011   \n","4  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10016   \n","\n","                      Provider_Name      Provider_StreetAddress Provider_City  \\\n","0  SOUTHEAST ALABAMA MEDICAL CENTER      1108 ROSS CLARK CIRCLE        DOTHAN   \n","1     MARSHALL MEDICAL CENTER SOUTH  2505 U S HIGHWAY 431 NORTH          BOAZ   \n","2    ELIZA COFFEE MEMORIAL HOSPITAL          205 MARENGO STREET      FLORENCE   \n","3                 ST VINCENT'S EAST  50 MEDICAL PARK EAST DRIVE    BIRMINGHAM   \n","4     SHELBY BAPTIST MEDICAL CENTER     1000 FIRST STREET NORTH     ALABASTER   \n","\n","  Provider_State  Provider_Zipcode Hospital_referral_region_desp  \\\n","0             AL             36301                   AL - Dothan   \n","1             AL             35957               AL - Birmingham   \n","2             AL             35631               AL - Birmingham   \n","3             AL             35235               AL - Birmingham   \n","4             AL             35007               AL - Birmingham   \n","\n","   Total_Discharges  Average_Total_Payments  ...  \\\n","0                91                 5777.24  ...   \n","1                14                 5787.57  ...   \n","2                24                 5434.95  ...   \n","3                25                 5417.56  ...   \n","4                18                 5658.33  ...   \n","\n","   Charge_Upper_Fence_State_drg  Charge_Upper_Fence_zip_drg  \\\n","0                      6611.905                     5777.24   \n","1                      6611.905                     5787.57   \n","2                      6611.905                     5434.95   \n","3                      6611.905                     5417.56   \n","4                      6611.905                     5658.33   \n","\n","   state_avg_drg_frq  state_avg_discharge  Provider_DRG_Count  \\\n","0          38.217391                   39                  92   \n","1          38.217391                   39                  49   \n","2          38.217391                   39                  86   \n","3          38.217391                   39                  87   \n","4          38.217391                   39                  80   \n","\n","   Provider_DRG_Count_state  Provider_Payment_Standard_Deviation  \\\n","0                 99.827688                          6038.338768   \n","1                 99.827688                          2717.731770   \n","2                 99.827688                          5630.866929   \n","3                 99.827688                          5546.045094   \n","4                 99.827688                          4550.105983   \n","\n","   Region_Payment_Standard_Deviation  Payment_per_Discharge_Provider  \\\n","0                        4612.285731                       63.486154   \n","1                        5410.640598                      413.397857   \n","2                        5410.640598                      226.456250   \n","3                        5410.640598                      216.702400   \n","4                        5410.640598                      314.351667   \n","\n","   Payment_per_Discharge_State  \n","0                   150.287907  \n","1                   150.287907  \n","2                   150.287907  \n","3                   150.287907  \n","4                   150.287907  \n","\n","[5 rows x 22 columns]"],"text/html":["\n","\n","  <div id=\"df-68a62d1b-df3f-4ae7-881a-7effeb9c5d91\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DRG</th>\n","      <th>Provider_Id</th>\n","      <th>Provider_Name</th>\n","      <th>Provider_StreetAddress</th>\n","      <th>Provider_City</th>\n","      <th>Provider_State</th>\n","      <th>Provider_Zipcode</th>\n","      <th>Hospital_referral_region_desp</th>\n","      <th>Total_Discharges</th>\n","      <th>Average_Total_Payments</th>\n","      <th>...</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>Charge_Upper_Fence_zip_drg</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>state_avg_discharge</th>\n","      <th>Provider_DRG_Count</th>\n","      <th>Provider_DRG_Count_state</th>\n","      <th>Provider_Payment_Standard_Deviation</th>\n","      <th>Region_Payment_Standard_Deviation</th>\n","      <th>Payment_per_Discharge_Provider</th>\n","      <th>Payment_per_Discharge_State</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10001</td>\n","      <td>SOUTHEAST ALABAMA MEDICAL CENTER</td>\n","      <td>1108 ROSS CLARK CIRCLE</td>\n","      <td>DOTHAN</td>\n","      <td>AL</td>\n","      <td>36301</td>\n","      <td>AL - Dothan</td>\n","      <td>91</td>\n","      <td>5777.24</td>\n","      <td>...</td>\n","      <td>6611.905</td>\n","      <td>5777.24</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>92</td>\n","      <td>99.827688</td>\n","      <td>6038.338768</td>\n","      <td>4612.285731</td>\n","      <td>63.486154</td>\n","      <td>150.287907</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10005</td>\n","      <td>MARSHALL MEDICAL CENTER SOUTH</td>\n","      <td>2505 U S HIGHWAY 431 NORTH</td>\n","      <td>BOAZ</td>\n","      <td>AL</td>\n","      <td>35957</td>\n","      <td>AL - Birmingham</td>\n","      <td>14</td>\n","      <td>5787.57</td>\n","      <td>...</td>\n","      <td>6611.905</td>\n","      <td>5787.57</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>49</td>\n","      <td>99.827688</td>\n","      <td>2717.731770</td>\n","      <td>5410.640598</td>\n","      <td>413.397857</td>\n","      <td>150.287907</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10006</td>\n","      <td>ELIZA COFFEE MEMORIAL HOSPITAL</td>\n","      <td>205 MARENGO STREET</td>\n","      <td>FLORENCE</td>\n","      <td>AL</td>\n","      <td>35631</td>\n","      <td>AL - Birmingham</td>\n","      <td>24</td>\n","      <td>5434.95</td>\n","      <td>...</td>\n","      <td>6611.905</td>\n","      <td>5434.95</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>86</td>\n","      <td>99.827688</td>\n","      <td>5630.866929</td>\n","      <td>5410.640598</td>\n","      <td>226.456250</td>\n","      <td>150.287907</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10011</td>\n","      <td>ST VINCENT'S EAST</td>\n","      <td>50 MEDICAL PARK EAST DRIVE</td>\n","      <td>BIRMINGHAM</td>\n","      <td>AL</td>\n","      <td>35235</td>\n","      <td>AL - Birmingham</td>\n","      <td>25</td>\n","      <td>5417.56</td>\n","      <td>...</td>\n","      <td>6611.905</td>\n","      <td>5417.56</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>87</td>\n","      <td>99.827688</td>\n","      <td>5546.045094</td>\n","      <td>5410.640598</td>\n","      <td>216.702400</td>\n","      <td>150.287907</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10016</td>\n","      <td>SHELBY BAPTIST MEDICAL CENTER</td>\n","      <td>1000 FIRST STREET NORTH</td>\n","      <td>ALABASTER</td>\n","      <td>AL</td>\n","      <td>35007</td>\n","      <td>AL - Birmingham</td>\n","      <td>18</td>\n","      <td>5658.33</td>\n","      <td>...</td>\n","      <td>6611.905</td>\n","      <td>5658.33</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>80</td>\n","      <td>99.827688</td>\n","      <td>4550.105983</td>\n","      <td>5410.640598</td>\n","      <td>314.351667</td>\n","      <td>150.287907</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 22 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68a62d1b-df3f-4ae7-881a-7effeb9c5d91')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-cb91b251-569f-40b6-a67b-1f8e458316a1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb91b251-569f-40b6-a67b-1f8e458316a1')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-cb91b251-569f-40b6-a67b-1f8e458316a1 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-68a62d1b-df3f-4ae7-881a-7effeb9c5d91 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-68a62d1b-df3f-4ae7-881a-7effeb9c5d91');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["### Feature Insight:\n","This is a derived feature from 'Average_Total_Payments' divided by 'Total_Discharges'. If a provider's payment per discharge is significantly higher than others, it might be a red flag."],"metadata":{"id":"GglcVJyYiy7v"}},{"cell_type":"markdown","source":["### 9, Discharge to DRG Ratio per Provider"],"metadata":{"id":"FdqQNViQi9qw"}},{"cell_type":"markdown","source":["There is possibily that providers upcoding a regular diagnosis to a more serious diagnosis. This will make the paitents pay more money for a regular diease.\n","We can detect this kind of fraud by calculate the discharge to DRG ratio to check if providers record more certain DRGs than state average."],"metadata":{"id":"g-AFo8tGjZZ_"}},{"cell_type":"code","source":["df_new['Discharge_to_DRG_Ratio_Provider'] = df['Total_Discharges'] / df.groupby('Provider_Id')['DRG'].transform('nunique')\n","\n","df_new['Discharge_to_DRG_Ratio_State'] = df.groupby(['Provider_State', 'DRG'])['Total_Discharges'].transform(lambda x: x / x.nunique())\n","\n","df_new.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":560},"id":"X3kCGx8KmUEL","executionInfo":{"status":"ok","timestamp":1689279018172,"user_tz":240,"elapsed":2153,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"f6dad171-7b24-435c-87c6-d330cddf858c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        DRG Provider_Id  \\\n","0  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10001   \n","1  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10005   \n","2  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10006   \n","3  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10011   \n","4  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10016   \n","\n","                      Provider_Name      Provider_StreetAddress Provider_City  \\\n","0  SOUTHEAST ALABAMA MEDICAL CENTER      1108 ROSS CLARK CIRCLE        DOTHAN   \n","1     MARSHALL MEDICAL CENTER SOUTH  2505 U S HIGHWAY 431 NORTH          BOAZ   \n","2    ELIZA COFFEE MEMORIAL HOSPITAL          205 MARENGO STREET      FLORENCE   \n","3                 ST VINCENT'S EAST  50 MEDICAL PARK EAST DRIVE    BIRMINGHAM   \n","4     SHELBY BAPTIST MEDICAL CENTER     1000 FIRST STREET NORTH     ALABASTER   \n","\n","  Provider_State  Provider_Zipcode Hospital_referral_region_desp  \\\n","0             AL             36301                   AL - Dothan   \n","1             AL             35957               AL - Birmingham   \n","2             AL             35631               AL - Birmingham   \n","3             AL             35235               AL - Birmingham   \n","4             AL             35007               AL - Birmingham   \n","\n","   Total_Discharges  Average_Total_Payments  ...  state_avg_drg_frq  \\\n","0                91                 5777.24  ...          38.217391   \n","1                14                 5787.57  ...          38.217391   \n","2                24                 5434.95  ...          38.217391   \n","3                25                 5417.56  ...          38.217391   \n","4                18                 5658.33  ...          38.217391   \n","\n","   state_avg_discharge  Provider_DRG_Count  Provider_DRG_Count_state  \\\n","0                   39                  92                 99.827688   \n","1                   39                  49                 99.827688   \n","2                   39                  86                 99.827688   \n","3                   39                  87                 99.827688   \n","4                   39                  80                 99.827688   \n","\n","   Provider_Payment_Standard_Deviation  Region_Payment_Standard_Deviation  \\\n","0                          6038.338768                        4612.285731   \n","1                          2717.731770                        5410.640598   \n","2                          5630.866929                        5410.640598   \n","3                          5546.045094                        5410.640598   \n","4                          4550.105983                        5410.640598   \n","\n","   Payment_per_Discharge_Provider  Payment_per_Discharge_State  \\\n","0                       63.486154                   150.287907   \n","1                      413.397857                   150.287907   \n","2                      226.456250                   150.287907   \n","3                      216.702400                   150.287907   \n","4                      314.351667                   150.287907   \n","\n","   Discharge_to_DRG_Ratio_Provider  Discharge_to_DRG_Ratio_State  \n","0                         0.989130                          4.55  \n","1                         0.285714                          0.70  \n","2                         0.279070                          1.20  \n","3                         0.287356                          1.25  \n","4                         0.225000                          0.90  \n","\n","[5 rows x 24 columns]"],"text/html":["\n","\n","  <div id=\"df-cea36647-30bf-48e9-b810-c082611a934d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DRG</th>\n","      <th>Provider_Id</th>\n","      <th>Provider_Name</th>\n","      <th>Provider_StreetAddress</th>\n","      <th>Provider_City</th>\n","      <th>Provider_State</th>\n","      <th>Provider_Zipcode</th>\n","      <th>Hospital_referral_region_desp</th>\n","      <th>Total_Discharges</th>\n","      <th>Average_Total_Payments</th>\n","      <th>...</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>state_avg_discharge</th>\n","      <th>Provider_DRG_Count</th>\n","      <th>Provider_DRG_Count_state</th>\n","      <th>Provider_Payment_Standard_Deviation</th>\n","      <th>Region_Payment_Standard_Deviation</th>\n","      <th>Payment_per_Discharge_Provider</th>\n","      <th>Payment_per_Discharge_State</th>\n","      <th>Discharge_to_DRG_Ratio_Provider</th>\n","      <th>Discharge_to_DRG_Ratio_State</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10001</td>\n","      <td>SOUTHEAST ALABAMA MEDICAL CENTER</td>\n","      <td>1108 ROSS CLARK CIRCLE</td>\n","      <td>DOTHAN</td>\n","      <td>AL</td>\n","      <td>36301</td>\n","      <td>AL - Dothan</td>\n","      <td>91</td>\n","      <td>5777.24</td>\n","      <td>...</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>92</td>\n","      <td>99.827688</td>\n","      <td>6038.338768</td>\n","      <td>4612.285731</td>\n","      <td>63.486154</td>\n","      <td>150.287907</td>\n","      <td>0.989130</td>\n","      <td>4.55</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10005</td>\n","      <td>MARSHALL MEDICAL CENTER SOUTH</td>\n","      <td>2505 U S HIGHWAY 431 NORTH</td>\n","      <td>BOAZ</td>\n","      <td>AL</td>\n","      <td>35957</td>\n","      <td>AL - Birmingham</td>\n","      <td>14</td>\n","      <td>5787.57</td>\n","      <td>...</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>49</td>\n","      <td>99.827688</td>\n","      <td>2717.731770</td>\n","      <td>5410.640598</td>\n","      <td>413.397857</td>\n","      <td>150.287907</td>\n","      <td>0.285714</td>\n","      <td>0.70</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10006</td>\n","      <td>ELIZA COFFEE MEMORIAL HOSPITAL</td>\n","      <td>205 MARENGO STREET</td>\n","      <td>FLORENCE</td>\n","      <td>AL</td>\n","      <td>35631</td>\n","      <td>AL - Birmingham</td>\n","      <td>24</td>\n","      <td>5434.95</td>\n","      <td>...</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>86</td>\n","      <td>99.827688</td>\n","      <td>5630.866929</td>\n","      <td>5410.640598</td>\n","      <td>226.456250</td>\n","      <td>150.287907</td>\n","      <td>0.279070</td>\n","      <td>1.20</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10011</td>\n","      <td>ST VINCENT'S EAST</td>\n","      <td>50 MEDICAL PARK EAST DRIVE</td>\n","      <td>BIRMINGHAM</td>\n","      <td>AL</td>\n","      <td>35235</td>\n","      <td>AL - Birmingham</td>\n","      <td>25</td>\n","      <td>5417.56</td>\n","      <td>...</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>87</td>\n","      <td>99.827688</td>\n","      <td>5546.045094</td>\n","      <td>5410.640598</td>\n","      <td>216.702400</td>\n","      <td>150.287907</td>\n","      <td>0.287356</td>\n","      <td>1.25</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10016</td>\n","      <td>SHELBY BAPTIST MEDICAL CENTER</td>\n","      <td>1000 FIRST STREET NORTH</td>\n","      <td>ALABASTER</td>\n","      <td>AL</td>\n","      <td>35007</td>\n","      <td>AL - Birmingham</td>\n","      <td>18</td>\n","      <td>5658.33</td>\n","      <td>...</td>\n","      <td>38.217391</td>\n","      <td>39</td>\n","      <td>80</td>\n","      <td>99.827688</td>\n","      <td>4550.105983</td>\n","      <td>5410.640598</td>\n","      <td>314.351667</td>\n","      <td>150.287907</td>\n","      <td>0.225000</td>\n","      <td>0.90</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 24 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cea36647-30bf-48e9-b810-c082611a934d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-d1800ae6-879c-4988-9dc0-108518e0bd74\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d1800ae6-879c-4988-9dc0-108518e0bd74')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-d1800ae6-879c-4988-9dc0-108518e0bd74 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cea36647-30bf-48e9-b810-c082611a934d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cea36647-30bf-48e9-b810-c082611a934d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["### Feature Insight:\n","This feature shows the ratio of the number of discharges to the number of unique DRGs for each provider. Providers with a high ratio might be overusing certain DRGs."],"metadata":{"id":"j-HWxmlEpA2p"}},{"cell_type":"markdown","source":["### 10, DRG counts by City"],"metadata":{"id":"caWMWrfApNaz"}},{"cell_type":"markdown","source":["City-wide paitent shall share similiar DRGs due to the similiar environment effect on them. Thus if a city has extreme more number of unique DRGS recorded, teh providers in this city may be suspecious on un_bundling."],"metadata":{"id":"NBgm9TMWpTT_"}},{"cell_type":"code","source":["df_new['City_DRG_Count'] = df.groupby('Provider_City')['DRG'].transform('nunique')\n","\n","df_new['avg_State_DRG_Count'] = df.groupby('Provider_State')['DRG'].transform('nunique').mean()\n","\n","df_new.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":560},"id":"2eMstHonr8PY","executionInfo":{"status":"ok","timestamp":1689279018444,"user_tz":240,"elapsed":286,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"3ef75857-9d79-4bea-a4d6-01eb7711edd3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        DRG Provider_Id  \\\n","0  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10001   \n","1  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10005   \n","2  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10006   \n","3  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10011   \n","4  039 - EXTRACRANIAL PROCEDURES W/O CC/MCC       10016   \n","\n","                      Provider_Name      Provider_StreetAddress Provider_City  \\\n","0  SOUTHEAST ALABAMA MEDICAL CENTER      1108 ROSS CLARK CIRCLE        DOTHAN   \n","1     MARSHALL MEDICAL CENTER SOUTH  2505 U S HIGHWAY 431 NORTH          BOAZ   \n","2    ELIZA COFFEE MEMORIAL HOSPITAL          205 MARENGO STREET      FLORENCE   \n","3                 ST VINCENT'S EAST  50 MEDICAL PARK EAST DRIVE    BIRMINGHAM   \n","4     SHELBY BAPTIST MEDICAL CENTER     1000 FIRST STREET NORTH     ALABASTER   \n","\n","  Provider_State  Provider_Zipcode Hospital_referral_region_desp  \\\n","0             AL             36301                   AL - Dothan   \n","1             AL             35957               AL - Birmingham   \n","2             AL             35631               AL - Birmingham   \n","3             AL             35235               AL - Birmingham   \n","4             AL             35007               AL - Birmingham   \n","\n","   Total_Discharges  Average_Total_Payments  ...  Provider_DRG_Count  \\\n","0                91                 5777.24  ...                  92   \n","1                14                 5787.57  ...                  49   \n","2                24                 5434.95  ...                  86   \n","3                25                 5417.56  ...                  87   \n","4                18                 5658.33  ...                  80   \n","\n","   Provider_DRG_Count_state  Provider_Payment_Standard_Deviation  \\\n","0                 99.827688                          6038.338768   \n","1                 99.827688                          2717.731770   \n","2                 99.827688                          5630.866929   \n","3                 99.827688                          5546.045094   \n","4                 99.827688                          4550.105983   \n","\n","   Region_Payment_Standard_Deviation  Payment_per_Discharge_Provider  \\\n","0                        4612.285731                       63.486154   \n","1                        5410.640598                      413.397857   \n","2                        5410.640598                      226.456250   \n","3                        5410.640598                      216.702400   \n","4                        5410.640598                      314.351667   \n","\n","   Payment_per_Discharge_State  Discharge_to_DRG_Ratio_Provider  \\\n","0                   150.287907                         0.989130   \n","1                   150.287907                         0.285714   \n","2                   150.287907                         0.279070   \n","3                   150.287907                         0.287356   \n","4                   150.287907                         0.225000   \n","\n","   Discharge_to_DRG_Ratio_State  City_DRG_Count  avg_State_DRG_Count  \n","0                          4.55              95            99.827688  \n","1                          0.70              49            99.827688  \n","2                          1.20             100            99.827688  \n","3                          1.25             100            99.827688  \n","4                          0.90              80            99.827688  \n","\n","[5 rows x 26 columns]"],"text/html":["\n","\n","  <div id=\"df-e2fec93f-f345-494f-afc3-d55e72c95812\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DRG</th>\n","      <th>Provider_Id</th>\n","      <th>Provider_Name</th>\n","      <th>Provider_StreetAddress</th>\n","      <th>Provider_City</th>\n","      <th>Provider_State</th>\n","      <th>Provider_Zipcode</th>\n","      <th>Hospital_referral_region_desp</th>\n","      <th>Total_Discharges</th>\n","      <th>Average_Total_Payments</th>\n","      <th>...</th>\n","      <th>Provider_DRG_Count</th>\n","      <th>Provider_DRG_Count_state</th>\n","      <th>Provider_Payment_Standard_Deviation</th>\n","      <th>Region_Payment_Standard_Deviation</th>\n","      <th>Payment_per_Discharge_Provider</th>\n","      <th>Payment_per_Discharge_State</th>\n","      <th>Discharge_to_DRG_Ratio_Provider</th>\n","      <th>Discharge_to_DRG_Ratio_State</th>\n","      <th>City_DRG_Count</th>\n","      <th>avg_State_DRG_Count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10001</td>\n","      <td>SOUTHEAST ALABAMA MEDICAL CENTER</td>\n","      <td>1108 ROSS CLARK CIRCLE</td>\n","      <td>DOTHAN</td>\n","      <td>AL</td>\n","      <td>36301</td>\n","      <td>AL - Dothan</td>\n","      <td>91</td>\n","      <td>5777.24</td>\n","      <td>...</td>\n","      <td>92</td>\n","      <td>99.827688</td>\n","      <td>6038.338768</td>\n","      <td>4612.285731</td>\n","      <td>63.486154</td>\n","      <td>150.287907</td>\n","      <td>0.989130</td>\n","      <td>4.55</td>\n","      <td>95</td>\n","      <td>99.827688</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10005</td>\n","      <td>MARSHALL MEDICAL CENTER SOUTH</td>\n","      <td>2505 U S HIGHWAY 431 NORTH</td>\n","      <td>BOAZ</td>\n","      <td>AL</td>\n","      <td>35957</td>\n","      <td>AL - Birmingham</td>\n","      <td>14</td>\n","      <td>5787.57</td>\n","      <td>...</td>\n","      <td>49</td>\n","      <td>99.827688</td>\n","      <td>2717.731770</td>\n","      <td>5410.640598</td>\n","      <td>413.397857</td>\n","      <td>150.287907</td>\n","      <td>0.285714</td>\n","      <td>0.70</td>\n","      <td>49</td>\n","      <td>99.827688</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10006</td>\n","      <td>ELIZA COFFEE MEMORIAL HOSPITAL</td>\n","      <td>205 MARENGO STREET</td>\n","      <td>FLORENCE</td>\n","      <td>AL</td>\n","      <td>35631</td>\n","      <td>AL - Birmingham</td>\n","      <td>24</td>\n","      <td>5434.95</td>\n","      <td>...</td>\n","      <td>86</td>\n","      <td>99.827688</td>\n","      <td>5630.866929</td>\n","      <td>5410.640598</td>\n","      <td>226.456250</td>\n","      <td>150.287907</td>\n","      <td>0.279070</td>\n","      <td>1.20</td>\n","      <td>100</td>\n","      <td>99.827688</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10011</td>\n","      <td>ST VINCENT'S EAST</td>\n","      <td>50 MEDICAL PARK EAST DRIVE</td>\n","      <td>BIRMINGHAM</td>\n","      <td>AL</td>\n","      <td>35235</td>\n","      <td>AL - Birmingham</td>\n","      <td>25</td>\n","      <td>5417.56</td>\n","      <td>...</td>\n","      <td>87</td>\n","      <td>99.827688</td>\n","      <td>5546.045094</td>\n","      <td>5410.640598</td>\n","      <td>216.702400</td>\n","      <td>150.287907</td>\n","      <td>0.287356</td>\n","      <td>1.25</td>\n","      <td>100</td>\n","      <td>99.827688</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>039 - EXTRACRANIAL PROCEDURES W/O CC/MCC</td>\n","      <td>10016</td>\n","      <td>SHELBY BAPTIST MEDICAL CENTER</td>\n","      <td>1000 FIRST STREET NORTH</td>\n","      <td>ALABASTER</td>\n","      <td>AL</td>\n","      <td>35007</td>\n","      <td>AL - Birmingham</td>\n","      <td>18</td>\n","      <td>5658.33</td>\n","      <td>...</td>\n","      <td>80</td>\n","      <td>99.827688</td>\n","      <td>4550.105983</td>\n","      <td>5410.640598</td>\n","      <td>314.351667</td>\n","      <td>150.287907</td>\n","      <td>0.225000</td>\n","      <td>0.90</td>\n","      <td>80</td>\n","      <td>99.827688</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 26 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2fec93f-f345-494f-afc3-d55e72c95812')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-55c179d9-7805-4088-b136-fbcb72e95c2c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-55c179d9-7805-4088-b136-fbcb72e95c2c')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-55c179d9-7805-4088-b136-fbcb72e95c2c button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e2fec93f-f345-494f-afc3-d55e72c95812 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e2fec93f-f345-494f-afc3-d55e72c95812');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["### Feature Insight:\n","This feature shoes the number of unique DRGs per city. If a city has a significantly higher number of unique DRGs, it could be a sign of fraud."],"metadata":{"id":"1SXhWaxismsV"}},{"cell_type":"markdown","source":["## Feature Engineering Done"],"metadata":{"id":"swJofjWIEq1d"}},{"cell_type":"markdown","source":["# Modeling & Anomaly Detection"],"metadata":{"id":"o915YOhmVFhY"}},{"cell_type":"markdown","source":["# Autoencoder"],"metadata":{"id":"YqWlrCxvEnV_"}},{"cell_type":"markdown","source":["Autoencoder is a special type of neutral network thaty copies the input values to the output values. It usueally contains three types of layers, input, hidden and output. The purpose of autoencoder is to male the output equal to input through hidden layers. Usually, we will set the number of neurons inthe hidden layers less than in input layers, so it makes the hidden layer to ignore the 'noises' or 'outliers', and restore the input values with remained normal data. Since the model only learns the normal pattern, it will detected the outlier in both training and new data later."],"metadata":{"id":"mmYrlBcXxuDR"}},{"cell_type":"code","source":["df_new.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Skq26Ik8HiYY","executionInfo":{"status":"ok","timestamp":1689279018445,"user_tz":240,"elapsed":57,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"af88f7ca-54ec-4a28-aa32-f779e1920771"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['DRG', 'Provider_Id', 'Provider_Name', 'Provider_StreetAddress',\n","       'Provider_City', 'Provider_State', 'Provider_Zipcode',\n","       'Hospital_referral_region_desp', 'Total_Discharges',\n","       'Average_Total_Payments', 'Average_Medicare_Payment',\n","       'Charge_Upper_Fence_State', 'Charge_Upper_Fence_State_drg',\n","       'Charge_Upper_Fence_zip_drg', 'state_avg_drg_frq',\n","       'state_avg_discharge', 'Provider_DRG_Count', 'Provider_DRG_Count_state',\n","       'Provider_Payment_Standard_Deviation',\n","       'Region_Payment_Standard_Deviation', 'Payment_per_Discharge_Provider',\n","       'Payment_per_Discharge_State', 'Discharge_to_DRG_Ratio_Provider',\n","       'Discharge_to_DRG_Ratio_State', 'City_DRG_Count',\n","       'avg_State_DRG_Count'],\n","      dtype='object')"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Remove the features we are noting using, keep 'Average_Total_payments' as y\n","df_model = df_new.iloc[:, [9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24]]"],"metadata":{"id":"DGuKo2eLEmgn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Define final used features\n","df_model = df_model.iloc[:, [0, 1, 2, 4, 7, 8, 10]]\n","\n","df_model = df_model.fillna(0)"],"metadata":{"id":"i_PW-Hjtt9VK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Split train and test data\n","from sklearn.model_selection import train_test_split\n","\n","X = df_model.drop('Average_Total_Payments', axis = 1)\n","y= df_model['Average_Total_Payments']\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size= 0.2, random_state = 123)"],"metadata":{"id":"_7YP_3u8IA70"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!pip install pyod"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"afUERjb-xtf2","executionInfo":{"status":"ok","timestamp":1689279027035,"user_tz":240,"elapsed":8224,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"cb3d6aa4-2497-42c7-b81d-45314286e7bb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pyod\n","  Downloading pyod-1.1.0.tar.gz (153 kB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/153.4 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[90m╺\u001b[0m\u001b[90m━━\u001b[0m \u001b[32m143.4/153.4 kB\u001b[0m \u001b[31m4.4 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m153.4/153.4 kB\u001b[0m \u001b[31m3.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from pyod) (1.3.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from pyod) (3.7.1)\n","Requirement already satisfied: numpy>=1.19 in /usr/local/lib/python3.10/dist-packages (from pyod) (1.22.4)\n","Requirement already satisfied: numba>=0.51 in /usr/local/lib/python3.10/dist-packages (from pyod) (0.56.4)\n","Requirement already satisfied: scipy>=1.5.1 in /usr/local/lib/python3.10/dist-packages (from pyod) (1.10.1)\n","Requirement already satisfied: scikit_learn>=0.20.0 in /usr/local/lib/python3.10/dist-packages (from pyod) (1.2.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from pyod) (1.16.0)\n","Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.51->pyod) (0.39.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from numba>=0.51->pyod) (67.7.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit_learn>=0.20.0->pyod) (3.1.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (1.1.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (4.40.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (1.4.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (23.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (8.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (3.1.0)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (2.8.2)\n","Building wheels for collected packages: pyod\n","  Building wheel for pyod (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyod: filename=pyod-1.1.0-py3-none-any.whl size=185331 sha256=5ed366a4c610b0ec5b49389687bd0c5413199d6efcc2c141092329999661c7c3\n","  Stored in directory: /root/.cache/pip/wheels/36/8e/e2/e932956b10b843eb6be9eefa70b5c1bee7b561be14c423b136\n","Successfully built pyod\n","Installing collected packages: pyod\n","Successfully installed pyod-1.1.0\n"]}]},{"cell_type":"code","source":["# Built PCA model and anamoly prediction results of train and test data using the model\n","\n","from pyod.models.auto_encoder import AutoEncoder\n","\n","atcdr = AutoEncoder(hidden_neurons = [3,3])\n","atcdr.fit(X_train)"],"metadata":{"id":"Ryc4KrGZKVhL","executionInfo":{"status":"ok","timestamp":1689280096313,"user_tz":240,"elapsed":1069284,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"62e74059-e756-46bf-cdc5-6b25261299f7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 6)                 42        \n","                                                                 \n"," dropout (Dropout)           (None, 6)                 0         \n","                                                                 \n"," dense_1 (Dense)             (None, 6)                 42        \n","                                                                 \n"," dropout_1 (Dropout)         (None, 6)                 0         \n","                                                                 \n"," dense_2 (Dense)             (None, 3)                 21        \n","                                                                 \n"," dropout_2 (Dropout)         (None, 3)                 0         \n","                                                                 \n"," dense_3 (Dense)             (None, 3)                 12        \n","                                                                 \n"," dropout_3 (Dropout)         (None, 3)                 0         \n","                                                                 \n"," dense_4 (Dense)             (None, 6)                 24        \n","                                                                 \n","=================================================================\n","Total params: 141\n","Trainable params: 141\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","3669/3669 [==============================] - 26s 6ms/step - loss: 1.1263 - val_loss: 1.0006\n","Epoch 2/100\n","3669/3669 [==============================] - 17s 5ms/step - loss: 1.0107 - val_loss: 0.9837\n","Epoch 3/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0039 - val_loss: 0.9812\n","Epoch 4/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0027 - val_loss: 0.9806\n","Epoch 5/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0024 - val_loss: 0.9804\n","Epoch 6/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0023 - val_loss: 0.9804\n","Epoch 7/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0023 - val_loss: 0.9803\n","Epoch 8/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0023 - val_loss: 0.9803\n","Epoch 9/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9803\n","Epoch 10/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0022 - val_loss: 0.9803\n","Epoch 11/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 1.0022 - val_loss: 0.9803\n","Epoch 12/100\n","3669/3669 [==============================] - 9s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 13/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 14/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 15/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 16/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 17/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 18/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 19/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 20/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 21/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 22/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 23/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 24/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 25/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 26/100\n","3669/3669 [==============================] - 20s 5ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 27/100\n","3669/3669 [==============================] - 15s 4ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 28/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 29/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 30/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 31/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 32/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 33/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 34/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 35/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 36/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 37/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 38/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 39/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 40/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 41/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 42/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 43/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 44/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 45/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 46/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 47/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 48/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 49/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 50/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 51/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 52/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 53/100\n","3669/3669 [==============================] - 9s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 54/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 55/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 56/100\n","3669/3669 [==============================] - 9s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 57/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 58/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 59/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 60/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 61/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 62/100\n","3669/3669 [==============================] - 8s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 63/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 64/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 65/100\n","3669/3669 [==============================] - 8s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 66/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 67/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 68/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 69/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 70/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 71/100\n","3669/3669 [==============================] - 9s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 72/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 73/100\n","3669/3669 [==============================] - 8s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 74/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 75/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 76/100\n","3669/3669 [==============================] - 8s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 77/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 78/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 79/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 80/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 81/100\n","3669/3669 [==============================] - 9s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 82/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 83/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 84/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 85/100\n","3669/3669 [==============================] - 9s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 86/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 87/100\n","3669/3669 [==============================] - 8s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 88/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 89/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 90/100\n","3669/3669 [==============================] - 8s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 91/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 92/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 93/100\n","3669/3669 [==============================] - 8s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 94/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 95/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 96/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 97/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 98/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 99/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 1.0022 - val_loss: 0.9802\n","Epoch 100/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0022 - val_loss: 0.9802\n","4077/4077 [==============================] - 6s 1ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["AutoEncoder(batch_size=32, contamination=0.1, dropout_rate=0.2, epochs=100,\n","      hidden_activation='relu', hidden_neurons=[3, 3], l2_regularizer=0.1,\n","      loss=<function mean_squared_error at 0x7893c15ee050>,\n","      optimizer='adam', output_activation='sigmoid', preprocessing=True,\n","      random_state=None, validation_size=0.1, verbose=1)"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["# Training data\n","y_train_pred_at = atcdr.predict(X_train)\n","y_train_score_at = atcdr.decision_function(X_train)\n","\n","# Test data\n","y_test_pred_at = atcdr.predict(X_test)\n","y_test_score_at = atcdr.decision_function(X_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aM4ezIrS0V1A","executionInfo":{"status":"ok","timestamp":1689280144465,"user_tz":240,"elapsed":48165,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"85c2da11-2055-4fad-9b6e-5d8558b184e8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4077/4077 [==============================] - 11s 3ms/step\n","4077/4077 [==============================] - 14s 3ms/step\n","1020/1020 [==============================] - 3s 3ms/step\n","1020/1020 [==============================] - 1s 1ms/step\n"]}]},{"cell_type":"code","source":["print(\"The threshold for the defined comtanimation rate:\" , atcdr.threshold_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QPBF9Z3yNxsw","executionInfo":{"status":"ok","timestamp":1689280144466,"user_tz":240,"elapsed":28,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"1124f21f-ad21-442a-a479-d020dde8dfca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The threshold for the defined comtanimation rate: 3.614077001848319\n"]}]},{"cell_type":"code","source":["def count_stat(vector):\n","    unique, counts = np.unique(vector, return_counts=True)\n","    return dict(zip(unique, counts))\n","\n","print(\"The training data:\", count_stat(y_train_pred_at))\n","print(\"The test data:\", count_stat(y_test_pred_at))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EQUA3QHc5Qov","executionInfo":{"status":"ok","timestamp":1689280144467,"user_tz":240,"elapsed":20,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"655723a0-5df7-40d5-97c2-642f7db94b2b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The training data: {0: 117406, 1: 13046}\n","The test data: {0: 29281, 1: 3332}\n"]}]},{"cell_type":"code","source":["# Hyperparameters\n","atcdr.get_params()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1Fs67HyrEVuj","executionInfo":{"status":"ok","timestamp":1689299019040,"user_tz":240,"elapsed":142,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"dfb12252-8900-465f-ac03-c338c82ce0b7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'batch_size': 32,\n"," 'contamination': 0.1,\n"," 'dropout_rate': 0.2,\n"," 'epochs': 100,\n"," 'hidden_activation': 'relu',\n"," 'hidden_neurons': [3, 3],\n"," 'l2_regularizer': 0.1,\n"," 'loss': <function keras.losses.mean_squared_error(y_true, y_pred)>,\n"," 'optimizer': 'adam',\n"," 'output_activation': 'sigmoid',\n"," 'preprocessing': True,\n"," 'random_state': None,\n"," 'validation_size': 0.1,\n"," 'verbose': 1}"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["# Using histogram to find 'cut point' to be threshold\n","plt.figure(figsize=(6, 4), dpi=80)\n","\n","plt.hist(y_train_score_at, bins='auto')\n","plt.title(\"Histogram with 'auto' bins - Autoencoder\")\n","plt.xlabel('Autoencoder outlier score')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":328},"id":"zjOFiGbLcmKQ","executionInfo":{"status":"ok","timestamp":1689280145397,"user_tz":240,"elapsed":946,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"621b0a67-1a60-4eb8-d59f-0a71168b6044"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 480x320 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Zoom in to better identify cutoff point\n","plt.hist(y_train_score_at, bins='auto')\n","plt.title(\"Histogram with 'auto' bins - Autoencoder\")\n","plt.xlabel('Autoencoder outlier score')\n","plt.xlim(5, 12.5)\n","plt.ylim(0,200)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"qruWJVYJlkZk","executionInfo":{"status":"ok","timestamp":1689281756401,"user_tz":240,"elapsed":2261,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"b600fe5a-277c-46d1-9a3d-64f854876239"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Highlight the 'anomalies' defined by threshold in red\n","\n","n, bins, patches = plt.hist(y_train_score_at, bins='auto')\n","condition = 8.8\n","for i, bin_val in enumerate(bins[:-1]):\n","    if bin_val > condition:\n","        patches[i].set_facecolor('red')\n","\n","plt.title(\"Histogram with 'auto' bins - Autoencoder\")\n","plt.xlabel('Autoencoder outlier score')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"eqIKSjDinfeJ","executionInfo":{"status":"ok","timestamp":1689281814742,"user_tz":240,"elapsed":1631,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"69a2405d-99fe-406d-bf84-7334018504dd"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Profile the normal and anomaly groups - Train Data\n","\n","threshold = 8.8\n","def descriptive_stat_threshold(df,pred_score, threshold):\n","    df = pd.DataFrame(df)\n","    df['Anomaly_Score'] = pred_score\n","    df['Group'] = np.where(df['Anomaly_Score']< threshold, 'Normal', 'Outlier')\n","\n","    cnt = df.groupby('Group')['Anomaly_Score'].count().reset_index().rename(columns={'Anomaly_Score':'Count'})\n","    cnt['Count %'] = (cnt['Count'] / cnt['Count'].sum()) * 100\n","    stat = df.groupby('Group').mean().round(2).reset_index()\n","    stat = cnt.merge(stat, left_on='Group',right_on='Group')\n","    return (stat)\n","\n","descriptive_stat_threshold(X_train,y_train_score_at, threshold)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"TpsIrRhNjG87","executionInfo":{"status":"ok","timestamp":1689281832425,"user_tz":240,"elapsed":157,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"83545c1f-d72c-4a66-bd8d-8410b674a0b0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group   Count    Count %  Charge_Upper_Fence_State  \\\n","0   Normal  130400  99.960139                  20452.34   \n","1  Outlier      52   0.039861                  21008.05   \n","\n","   Charge_Upper_Fence_State_drg  state_avg_drg_frq  \\\n","0                      13393.53              42.71   \n","1                      27322.08             111.23   \n","\n","   Provider_Payment_Standard_Deviation  Region_Payment_Standard_Deviation  \\\n","0                              6704.28                            7287.84   \n","1                             16413.06                           10437.29   \n","\n","   Payment_per_Discharge_State  Anomaly_Score  \n","0                       304.76           2.18  \n","1                      1740.11          11.00  "],"text/html":["\n","\n","  <div id=\"df-9ec4ba02-00fd-42a7-9b19-7599c3a4f062\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Count</th>\n","      <th>Count %</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>Provider_Payment_Standard_Deviation</th>\n","      <th>Region_Payment_Standard_Deviation</th>\n","      <th>Payment_per_Discharge_State</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>130400</td>\n","      <td>99.960139</td>\n","      <td>20452.34</td>\n","      <td>13393.53</td>\n","      <td>42.71</td>\n","      <td>6704.28</td>\n","      <td>7287.84</td>\n","      <td>304.76</td>\n","      <td>2.18</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>52</td>\n","      <td>0.039861</td>\n","      <td>21008.05</td>\n","      <td>27322.08</td>\n","      <td>111.23</td>\n","      <td>16413.06</td>\n","      <td>10437.29</td>\n","      <td>1740.11</td>\n","      <td>11.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ec4ba02-00fd-42a7-9b19-7599c3a4f062')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-2055ab8f-d51c-40f8-ba9f-4e8b54096892\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2055ab8f-d51c-40f8-ba9f-4e8b54096892')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-2055ab8f-d51c-40f8-ba9f-4e8b54096892 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9ec4ba02-00fd-42a7-9b19-7599c3a4f062 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9ec4ba02-00fd-42a7-9b19-7599c3a4f062');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["at_train = pd.DataFrame(descriptive_stat_threshold(X_train,y_train_score_at, threshold))\n","at_train[['Group', 'Anomaly_Score']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"CRji2xHN7-v6","executionInfo":{"status":"ok","timestamp":1689281833710,"user_tz":240,"elapsed":201,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"48777102-a0ff-4c2e-e93f-51485b4a3cc4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group  Anomaly_Score\n","0   Normal           2.18\n","1  Outlier          11.00"],"text/html":["\n","\n","  <div id=\"df-6ba1fdad-3810-4dbf-9256-1b0d4a26ffe1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>2.18</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>11.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ba1fdad-3810-4dbf-9256-1b0d4a26ffe1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-87094d20-4fab-4bdb-a823-260863983c15\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-87094d20-4fab-4bdb-a823-260863983c15')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-87094d20-4fab-4bdb-a823-260863983c15 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6ba1fdad-3810-4dbf-9256-1b0d4a26ffe1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6ba1fdad-3810-4dbf-9256-1b0d4a26ffe1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["#  Profile the normal and anomaly groups - Test Data\n","\n","descriptive_stat_threshold(X_test,y_test_score_at, threshold)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"g5JLHYgsx9_l","executionInfo":{"status":"ok","timestamp":1689281834917,"user_tz":240,"elapsed":161,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"3180cb26-7de0-40c5-dfdc-bebf83746cfb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group  Count    Count %  Charge_Upper_Fence_State  \\\n","0   Normal  32594  99.941741                  20434.94   \n","1  Outlier     19   0.058259                  20178.17   \n","\n","   Charge_Upper_Fence_State_drg  state_avg_drg_frq  \\\n","0                      13332.03              42.90   \n","1                      24249.95             126.57   \n","\n","   Provider_Payment_Standard_Deviation  Region_Payment_Standard_Deviation  \\\n","0                              6721.42                            7287.76   \n","1                             14449.00                            9352.76   \n","\n","   Payment_per_Discharge_State  Anomaly_Score  \n","0                       304.75           2.18  \n","1                      1795.92          11.69  "],"text/html":["\n","\n","  <div id=\"df-2d48b602-b63a-4eba-9d26-15d58d9deaf7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Count</th>\n","      <th>Count %</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>Provider_Payment_Standard_Deviation</th>\n","      <th>Region_Payment_Standard_Deviation</th>\n","      <th>Payment_per_Discharge_State</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>32594</td>\n","      <td>99.941741</td>\n","      <td>20434.94</td>\n","      <td>13332.03</td>\n","      <td>42.90</td>\n","      <td>6721.42</td>\n","      <td>7287.76</td>\n","      <td>304.75</td>\n","      <td>2.18</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>19</td>\n","      <td>0.058259</td>\n","      <td>20178.17</td>\n","      <td>24249.95</td>\n","      <td>126.57</td>\n","      <td>14449.00</td>\n","      <td>9352.76</td>\n","      <td>1795.92</td>\n","      <td>11.69</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2d48b602-b63a-4eba-9d26-15d58d9deaf7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-5f42ff64-33e4-4276-b1a0-50203482fbc7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5f42ff64-33e4-4276-b1a0-50203482fbc7')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-5f42ff64-33e4-4276-b1a0-50203482fbc7 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2d48b602-b63a-4eba-9d26-15d58d9deaf7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2d48b602-b63a-4eba-9d26-15d58d9deaf7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["at_test = pd.DataFrame(descriptive_stat_threshold(X_test,y_test_score_at, threshold))\n","at_test[['Group', 'Anomaly_Score']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"7GZa10fc64Yy","executionInfo":{"status":"ok","timestamp":1689281835915,"user_tz":240,"elapsed":142,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"486e50c9-6fe3-40a6-f478-4b564a81c198"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group  Anomaly_Score\n","0   Normal           2.18\n","1  Outlier          11.69"],"text/html":["\n","\n","  <div id=\"df-de1deb04-31d9-4b40-8eb3-023b13f6d2af\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>2.18</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>11.69</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de1deb04-31d9-4b40-8eb3-023b13f6d2af')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-ff376b96-091d-4f37-b6d6-471fe87f42f9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff376b96-091d-4f37-b6d6-471fe87f42f9')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-ff376b96-091d-4f37-b6d6-471fe87f42f9 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-de1deb04-31d9-4b40-8eb3-023b13f6d2af button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-de1deb04-31d9-4b40-8eb3-023b13f6d2af');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["## Model Stability"],"metadata":{"id":"ucCXXku4Er52"}},{"cell_type":"code","source":["!pip install combo"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NxPXJG6PMv88","executionInfo":{"status":"ok","timestamp":1689284463368,"user_tz":240,"elapsed":7918,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"3c820baf-50f9-490c-c5d7-874082298518"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting combo\n","  Downloading combo-0.1.3.tar.gz (38 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from combo) (1.3.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from combo) (3.7.1)\n","Requirement already satisfied: numpy>=1.13 in /usr/local/lib/python3.10/dist-packages (from combo) (1.22.4)\n","Requirement already satisfied: numba>=0.35 in /usr/local/lib/python3.10/dist-packages (from combo) (0.56.4)\n","Requirement already satisfied: pyod in /usr/local/lib/python3.10/dist-packages (from combo) (1.1.0)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from combo) (1.10.1)\n","Requirement already satisfied: scikit_learn>=0.20 in /usr/local/lib/python3.10/dist-packages (from combo) (1.2.2)\n","Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.35->combo) (0.39.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from numba>=0.35->combo) (67.7.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit_learn>=0.20->combo) (3.1.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->combo) (1.1.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->combo) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->combo) (4.40.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->combo) (1.4.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->combo) (23.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->combo) (8.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->combo) (3.1.0)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->combo) (2.8.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from pyod->combo) (1.16.0)\n","Building wheels for collected packages: combo\n","  Building wheel for combo (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for combo: filename=combo-0.1.3-py3-none-any.whl size=42865 sha256=4af13649a236565e5d71319c43e781b3b104e03411758592c7a4008109ecaa2d\n","  Stored in directory: /root/.cache/pip/wheels/7a/48/ff/0d6e1017d8bf3d844d332736fbb268dca767162779f93ff50a\n","Successfully built combo\n","Installing collected packages: combo\n","Successfully installed combo-0.1.3\n"]}]},{"cell_type":"code","source":["# Use \"Average\" methond to aggregate the outcome\n","from pyod.models.combination import average\n","\n","# Set three different layer combos\n","atcdr1 = AutoEncoder(contamination=0.05, hidden_neurons =[2, 2])\n","atcdr2 = AutoEncoder(contamination=0.05, hidden_neurons =[9, 2, 9])\n","atcdr3 = AutoEncoder(contamination=0.05, hidden_neurons =[12, 8, 2, 8, 12] )"],"metadata":{"id":"08T_P3imMCsG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Standardize data\n","from pyod.utils.utility import standardizer\n","\n","X_train_norm, X_test_norm = standardizer(X_train, X_test)"],"metadata":{"id":"chs3cOw6M4vC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Prepare data frames for modeling results\n","train_scores = np.zeros([X_train.shape[0], 3])\n","test_scores = np.zeros([X_test.shape[0], 3])"],"metadata":{"id":"y10NmxhqNJWX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Model training *3\n","atcdr1.fit(X_train_norm)\n","atcdr2.fit(X_train_norm)\n","atcdr3.fit(X_train_norm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yWY6i3rENNfs","executionInfo":{"status":"ok","timestamp":1689288186418,"user_tz":240,"elapsed":3603943,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"66e9dfbd-c294-4d13-9cc7-aa5c1ac2c2fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_5 (Dense)             (None, 6)                 42        \n","                                                                 \n"," dropout_4 (Dropout)         (None, 6)                 0         \n","                                                                 \n"," dense_6 (Dense)             (None, 6)                 42        \n","                                                                 \n"," dropout_5 (Dropout)         (None, 6)                 0         \n","                                                                 \n"," dense_7 (Dense)             (None, 2)                 14        \n","                                                                 \n"," dropout_6 (Dropout)         (None, 2)                 0         \n","                                                                 \n"," dense_8 (Dense)             (None, 2)                 6         \n","                                                                 \n"," dropout_7 (Dropout)         (None, 2)                 0         \n","                                                                 \n"," dense_9 (Dense)             (None, 6)                 18        \n","                                                                 \n","=================================================================\n","Total params: 122\n","Trainable params: 122\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","3669/3669 [==============================] - 14s 2ms/step - loss: 1.1154 - val_loss: 1.0180\n","Epoch 2/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0043 - val_loss: 0.9911\n","Epoch 3/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9946 - val_loss: 0.9796\n","Epoch 4/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9868 - val_loss: 0.9670\n","Epoch 5/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9834 - val_loss: 0.9605\n","Epoch 6/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9813 - val_loss: 0.9576\n","Epoch 7/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 0.9803 - val_loss: 0.9570\n","Epoch 8/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9792 - val_loss: 0.9537\n","Epoch 9/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9789 - val_loss: 0.9520\n","Epoch 10/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9784 - val_loss: 0.9529\n","Epoch 11/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9780 - val_loss: 0.9524\n","Epoch 12/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9780 - val_loss: 0.9518\n","Epoch 13/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9778 - val_loss: 0.9508\n","Epoch 14/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9774 - val_loss: 0.9514\n","Epoch 15/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9771 - val_loss: 0.9499\n","Epoch 16/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 0.9774 - val_loss: 0.9503\n","Epoch 17/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9772 - val_loss: 0.9508\n","Epoch 18/100\n","3669/3669 [==============================] - 9s 3ms/step - loss: 0.9768 - val_loss: 0.9503\n","Epoch 19/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9767 - val_loss: 0.9507\n","Epoch 20/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9772 - val_loss: 0.9509\n","Epoch 21/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9769 - val_loss: 0.9493\n","Epoch 22/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9769 - val_loss: 0.9499\n","Epoch 23/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9767 - val_loss: 0.9501\n","Epoch 24/100\n","3669/3669 [==============================] - 15s 4ms/step - loss: 0.9770 - val_loss: 0.9509\n","Epoch 25/100\n","3669/3669 [==============================] - 19s 5ms/step - loss: 0.9765 - val_loss: 0.9506\n","Epoch 26/100\n","3669/3669 [==============================] - 17s 5ms/step - loss: 0.9766 - val_loss: 0.9500\n","Epoch 27/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 0.9767 - val_loss: 0.9499\n","Epoch 28/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9769 - val_loss: 0.9501\n","Epoch 29/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9766 - val_loss: 0.9493\n","Epoch 30/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 0.9764 - val_loss: 0.9499\n","Epoch 31/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9763 - val_loss: 0.9493\n","Epoch 32/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9766 - val_loss: 0.9502\n","Epoch 33/100\n","3669/3669 [==============================] - 9s 3ms/step - loss: 0.9763 - val_loss: 0.9489\n","Epoch 34/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9767 - val_loss: 0.9489\n","Epoch 35/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9763 - val_loss: 0.9493\n","Epoch 36/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9763 - val_loss: 0.9491\n","Epoch 37/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9770 - val_loss: 0.9493\n","Epoch 38/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9763 - val_loss: 0.9486\n","Epoch 39/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 0.9763 - val_loss: 0.9492\n","Epoch 40/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9763 - val_loss: 0.9497\n","Epoch 41/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9765 - val_loss: 0.9495\n","Epoch 42/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 0.9763 - val_loss: 0.9511\n","Epoch 43/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9765 - val_loss: 0.9490\n","Epoch 44/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9763 - val_loss: 0.9489\n","Epoch 45/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9766 - val_loss: 0.9494\n","Epoch 46/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 0.9763 - val_loss: 0.9506\n","Epoch 47/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9762 - val_loss: 0.9504\n","Epoch 48/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9766 - val_loss: 0.9503\n","Epoch 49/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9764 - val_loss: 0.9491\n","Epoch 50/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9762 - val_loss: 0.9496\n","Epoch 51/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9761 - val_loss: 0.9490\n","Epoch 52/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9766 - val_loss: 0.9514\n","Epoch 53/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9768 - val_loss: 0.9490\n","Epoch 54/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9760 - val_loss: 0.9491\n","Epoch 55/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9768 - val_loss: 0.9493\n","Epoch 56/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9762 - val_loss: 0.9494\n","Epoch 57/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9765 - val_loss: 0.9497\n","Epoch 58/100\n","3669/3669 [==============================] - 9s 3ms/step - loss: 0.9760 - val_loss: 0.9484\n","Epoch 59/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9761 - val_loss: 0.9485\n","Epoch 60/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9765 - val_loss: 0.9487\n","Epoch 61/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9762 - val_loss: 0.9510\n","Epoch 62/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 0.9764 - val_loss: 0.9485\n","Epoch 63/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9761 - val_loss: 0.9513\n","Epoch 64/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9762 - val_loss: 0.9500\n","Epoch 65/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9761 - val_loss: 0.9479\n","Epoch 66/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9763 - val_loss: 0.9490\n","Epoch 67/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9765 - val_loss: 0.9491\n","Epoch 68/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9762 - val_loss: 0.9498\n","Epoch 69/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9765 - val_loss: 0.9502\n","Epoch 70/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9761 - val_loss: 0.9489\n","Epoch 71/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9767 - val_loss: 0.9496\n","Epoch 72/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9762 - val_loss: 0.9492\n","Epoch 73/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9766 - val_loss: 0.9495\n","Epoch 74/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9763 - val_loss: 0.9495\n","Epoch 75/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9765 - val_loss: 0.9496\n","Epoch 76/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9763 - val_loss: 0.9502\n","Epoch 77/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9765 - val_loss: 0.9490\n","Epoch 78/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9766 - val_loss: 0.9491\n","Epoch 79/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9766 - val_loss: 0.9494\n","Epoch 80/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9764 - val_loss: 0.9491\n","Epoch 81/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9763 - val_loss: 0.9498\n","Epoch 82/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9765 - val_loss: 0.9499\n","Epoch 83/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9768 - val_loss: 0.9502\n","Epoch 84/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9763 - val_loss: 0.9483\n","Epoch 85/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9763 - val_loss: 0.9502\n","Epoch 86/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9766 - val_loss: 0.9493\n","Epoch 87/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9764 - val_loss: 0.9496\n","Epoch 88/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9765 - val_loss: 0.9497\n","Epoch 89/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9763 - val_loss: 0.9494\n","Epoch 90/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9765 - val_loss: 0.9496\n","Epoch 91/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9762 - val_loss: 0.9495\n","Epoch 92/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9764 - val_loss: 0.9493\n","Epoch 93/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 0.9763 - val_loss: 0.9489\n","Epoch 94/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9767 - val_loss: 0.9481\n","Epoch 95/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9919 - val_loss: 1.0106\n","Epoch 96/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 0.9843 - val_loss: 0.9533\n","Epoch 97/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9767 - val_loss: 0.9492\n","Epoch 98/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9768 - val_loss: 0.9498\n","Epoch 99/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 0.9768 - val_loss: 0.9494\n","Epoch 100/100\n","3669/3669 [==============================] - 9s 2ms/step - loss: 0.9762 - val_loss: 0.9503\n","4077/4077 [==============================] - 7s 2ms/step\n","Model: \"sequential_2\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_10 (Dense)            (None, 6)                 42        \n","                                                                 \n"," dropout_8 (Dropout)         (None, 6)                 0         \n","                                                                 \n"," dense_11 (Dense)            (None, 6)                 42        \n","                                                                 \n"," dropout_9 (Dropout)         (None, 6)                 0         \n","                                                                 \n"," dense_12 (Dense)            (None, 9)                 63        \n","                                                                 \n"," dropout_10 (Dropout)        (None, 9)                 0         \n","                                                                 \n"," dense_13 (Dense)            (None, 2)                 20        \n","                                                                 \n"," dropout_11 (Dropout)        (None, 2)                 0         \n","                                                                 \n"," dense_14 (Dense)            (None, 9)                 27        \n","                                                                 \n"," dropout_12 (Dropout)        (None, 9)                 0         \n","                                                                 \n"," dense_15 (Dense)            (None, 6)                 60        \n","                                                                 \n","=================================================================\n","Total params: 254\n","Trainable params: 254\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","3669/3669 [==============================] - 14s 3ms/step - loss: 1.1151 - val_loss: 1.0108\n","Epoch 2/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0105 - val_loss: 0.9958\n","Epoch 3/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0031 - val_loss: 0.9927\n","Epoch 4/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0017 - val_loss: 0.9920\n","Epoch 5/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0013 - val_loss: 0.9916\n","Epoch 6/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0011 - val_loss: 0.9915\n","Epoch 7/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0011 - val_loss: 0.9914\n","Epoch 8/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9914\n","Epoch 9/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 10/100\n","3669/3669 [==============================] - 15s 4ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 11/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 12/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 13/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 14/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 15/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 16/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 17/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 18/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 19/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 20/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 21/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 22/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 23/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 24/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 25/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 26/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9913\n","Epoch 27/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 28/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 29/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 30/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 31/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 32/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 33/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 34/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 35/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 36/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 37/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 38/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 39/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 40/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 41/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 42/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 43/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 44/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 45/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 46/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 47/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 48/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 49/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 50/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 51/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 52/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 53/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 54/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 55/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 56/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 57/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 58/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 59/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 60/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 61/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 62/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 63/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 64/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 65/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 66/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 67/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 68/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 69/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 70/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 71/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 72/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 73/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 74/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 75/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 76/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 77/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 78/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 79/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 80/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 81/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 82/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 83/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 84/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 85/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 86/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 87/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 88/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 89/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 90/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 91/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 92/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 93/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 94/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 95/100\n","3669/3669 [==============================] - 11s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 96/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 97/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 98/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 99/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","Epoch 100/100\n","3669/3669 [==============================] - 10s 3ms/step - loss: 1.0010 - val_loss: 0.9912\n","4077/4077 [==============================] - 8s 2ms/step\n","Model: \"sequential_3\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_16 (Dense)            (None, 6)                 42        \n","                                                                 \n"," dropout_13 (Dropout)        (None, 6)                 0         \n","                                                                 \n"," dense_17 (Dense)            (None, 6)                 42        \n","                                                                 \n"," dropout_14 (Dropout)        (None, 6)                 0         \n","                                                                 \n"," dense_18 (Dense)            (None, 12)                84        \n","                                                                 \n"," dropout_15 (Dropout)        (None, 12)                0         \n","                                                                 \n"," dense_19 (Dense)            (None, 8)                 104       \n","                                                                 \n"," dropout_16 (Dropout)        (None, 8)                 0         \n","                                                                 \n"," dense_20 (Dense)            (None, 2)                 18        \n","                                                                 \n"," dropout_17 (Dropout)        (None, 2)                 0         \n","                                                                 \n"," dense_21 (Dense)            (None, 8)                 24        \n","                                                                 \n"," dropout_18 (Dropout)        (None, 8)                 0         \n","                                                                 \n"," dense_22 (Dense)            (None, 12)                108       \n","                                                                 \n"," dropout_19 (Dropout)        (None, 12)                0         \n","                                                                 \n"," dense_23 (Dense)            (None, 6)                 78        \n","                                                                 \n","=================================================================\n","Total params: 500\n","Trainable params: 500\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","3669/3669 [==============================] - 15s 4ms/step - loss: 1.1508 - val_loss: 1.0128\n","Epoch 2/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0101 - val_loss: 0.9998\n","Epoch 3/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 1.0030 - val_loss: 0.9969\n","Epoch 4/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0013 - val_loss: 0.9962\n","Epoch 5/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0009 - val_loss: 0.9960\n","Epoch 6/100\n","3669/3669 [==============================] - 15s 4ms/step - loss: 1.0007 - val_loss: 0.9959\n","Epoch 7/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0006 - val_loss: 0.9958\n","Epoch 8/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 9/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 10/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 11/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 12/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 13/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 14/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 15/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 16/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 17/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 18/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 19/100\n","3669/3669 [==============================] - 15s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 20/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 21/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 22/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 23/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 24/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 25/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 26/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 27/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 28/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 29/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 30/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 31/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 32/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 33/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 34/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 35/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 36/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 37/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 38/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 39/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 40/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 41/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 42/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 43/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 44/100\n","3669/3669 [==============================] - 15s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 45/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 46/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 47/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 48/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 49/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 50/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 51/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 52/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 53/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 54/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 55/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 56/100\n","3669/3669 [==============================] - 15s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 57/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 58/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 59/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 60/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 61/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 62/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 63/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 64/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 65/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 66/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 67/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 68/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 69/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 70/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 71/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 72/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 73/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 74/100\n","3669/3669 [==============================] - 15s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 75/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 76/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 77/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 78/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 79/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 80/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 81/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 82/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 83/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 84/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 85/100\n","3669/3669 [==============================] - 12s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 86/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 87/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 88/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 89/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 90/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 91/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 92/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 93/100\n","3669/3669 [==============================] - 13s 3ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 94/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 95/100\n","3669/3669 [==============================] - 13s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 96/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 97/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 98/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 99/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","Epoch 100/100\n","3669/3669 [==============================] - 14s 4ms/step - loss: 1.0005 - val_loss: 0.9958\n","4077/4077 [==============================] - 7s 2ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["AutoEncoder(batch_size=32, contamination=0.05, dropout_rate=0.2, epochs=100,\n","      hidden_activation='relu', hidden_neurons=[12, 8, 2, 8, 12],\n","      l2_regularizer=0.1,\n","      loss=<function mean_squared_error at 0x7893c15ee050>,\n","      optimizer='adam', output_activation='sigmoid', preprocessing=True,\n","      random_state=None, validation_size=0.1, verbose=1)"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["# Merged the model dtection results back to the dataframe create above\n","train_scores[:, 0] = atcdr1.decision_function(X_train_norm)\n","train_scores[:, 1] = atcdr2.decision_function(X_train_norm)\n","train_scores[:, 2] = atcdr3.decision_function(X_train_norm)\n","test_scores[:, 0] = atcdr1.decision_function(X_test_norm)\n","test_scores[:, 1] = atcdr2.decision_function(X_test_norm)\n","test_scores[:, 2] = atcdr3.decision_function(X_test_norm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-J6vPMqpOOCn","executionInfo":{"status":"ok","timestamp":1689288225322,"user_tz":240,"elapsed":38916,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"bab150b7-bd1a-44a8-fd87-d8050b71211c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4077/4077 [==============================] - 6s 2ms/step\n","4077/4077 [==============================] - 8s 2ms/step\n","4077/4077 [==============================] - 6s 2ms/step\n","1020/1020 [==============================] - 2s 2ms/step\n","1020/1020 [==============================] - 2s 2ms/step\n","1020/1020 [==============================] - 2s 2ms/step\n"]}]},{"cell_type":"code","source":["# Standardize scores\n","train_scores_norm, test_scores_norm = standardizer(train_scores,test_scores)\n","\n","# Combination by average\n","y_train_by_average = average(train_scores_norm)\n","y_test_by_average = average(test_scores_norm)"],"metadata":{"id":"Nsg7wG8GOXAP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Find cut point\n","plt.figure(figsize=(6, 4), dpi=80)\n","plt.hist(y_train_by_average, bins='auto')\n","plt.title(\"Combination by average\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"lDW95x-COYgd","executionInfo":{"status":"ok","timestamp":1689288226196,"user_tz":240,"elapsed":889,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"5365d4a2-89ee-416f-eec9-8bdaaea709ff"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 480x320 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAa0AAAEoCAYAAADrK65cAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAAxOAAAMTgF/d4wjAAAf5ElEQVR4nO3dfVBWdf7/8ddlqI0CoqiIXlygAs2sqHiDa2pp21pWblpqtmaJd2Ctay7Nru42O+3ut0WbkrIa08mizM3MTKdJa72pNEenxYQ0SgUVuS7zLhUV1zvg8/ujn9eKcXNxgVx88PmYOTNc53PO57zPpee8/JxzPDiMMUYAAFigSaALAADAV4QWAMAahBYAwBqEFgDAGoQWAMAahBYAwBqEFgDAGoQWGg2Hw6ENGzZU2p6enq677rrrutcxbdo0TZky5bpuIyYmRosXL76u2wAaIkILdW7Xrl16+OGHFRkZqeDgYMXExOi3v/2tduzYEdC6/vKXv2jdunV12mdFQblw4UICBbhOCC3UqS+++EL9+vVTRESEtm3bprNnzyonJ0dDhw7VihUrAl0eGpDLly8HugRYiNBCnUpNTdXo0aM1f/58xcTEyOFwKCwsTJMmTdKcOXO8y7311ltKSEhQaGioEhIS9Pbbb3vbCgoK5HA49Oabb6pHjx5q2bKlBg0aJI/Ho1dffVXR0dEKCwtTamqqSktLy21/586dSkpKUnBwsPr166ft27d72/72t79p0KBB3s9DhgzRk08+qXHjxqlVq1aKiorSa6+95m0/fPiwhg8froiICIWEhKhHjx7lgrdbt26SpN/85jcKDg7WPffcI0lKTk7W+PHjvcsdOnRIDz30kCIiIhQREaGxY8fqhx9+8LYnJyfr4Ycf1vTp0xUeHq6IiAj99a9/rfa7drvd+tWvfqXg4GAlJCTo3//+tyTpzJkzCg4O1qZNm8otP336dI0cObLCvqrb13Hjxmny5Mnl1tmxY4eaNWumo0ePSpJ2797t7aNTp0564okndO7cOe/yMTExeuaZZzRs2DCFhIRo3rx51W5Xkv7zn/8oKSlJISEh6tu3rzIyMuRwOMots2TJEvXs2VOtWrVSt27d9N5771X7/cFSBqgje/fuNZLMunXrqlzugw8+MCEhIWbDhg2mpKTErF+/3rRs2dKsWrXKGGPMgQMHjCQzdOhQc/ToUXP27FkzcOBAEx8fb/70pz+ZCxcumLy8PNOqVSvz7rvvevuVZLp27Wpyc3PNhQsXzDPPPGPatm1rioqKjDHGPPPMM2bgwIHe5QcPHmxCQ0PNxo0bTWlpqfnggw9MkyZNTF5enjHGGLfbbVauXGnOnj1rLl26ZBYvXmyCgoLMt99+W26b69evL7d/EyZMMI888ogxxpiSkhKTmJhoHn74YVNUVGROnTplxowZY/r06WNKSkq8yzdr1swsW7bMlJSUmK1bt5qgoCDz2WefVfodRkdHm7Zt25otW7aYy5cvm8WLF5tmzZqZ/fv3G2OMmTp1qhk3bpx3+XPnzplWrVqZTz75pML+qtvXjRs3muDgYHP27FnvOtOmTTMPPPCAMcaY48ePm7Zt25qMjAxz4cIFc/z4cXPnnXeaKVOmlKs5IiLCbN261ZSVlZlz585Vu91Tp06ZNm3amL///e/m4sWL5vvvvzdxcXHm6lNXZmamiYqKMllZWaa0tNR8+eWXJiQkxHz55ZeVfn+wF6GFOrNlyxYjyXz33XdVLnfXXXeZmTNnlps3Y8YMc/fddxtj/hdamzdv9ra/9NJLpkWLFt4TvTHGDB8+vFw/kszLL7/s/VxaWmo6dOhglixZYoypOLQmTpxYro62bdua9957r9Lae/ToUW4b1YXW1q1bjcPhMCdPnvS2//jjj8bhcJht27Z5l7/jjjvK9dG3b18zd+7cSuuIjo42aWlp5eb169fP/OMf/zDGGLNjxw7TvHlz8+OPPxpjjHnjjTdM586dTVlZWaV9VrWvZWVlpmvXrub11183xvwvBNesWWOMMWbevHmmf//+5dbfsmWLadasmffPLDo62syePbtG233nnXdMRESEKS0t9ba/8sor5UKre/fuZuHCheX6mDJlipk8ebLP+wp7cHkQdaZ9+/aSJI/HU+VybrdbXbt2LTcvNjZWhYWF5eZFRkZ6f27ZsqXatWunm266qdy8s2fPllunc+fO3p+bNGmi6Ohoud3uSmvp2LFjuc9X93nq1ClNnTpVnTt3VmhoqMLCwpSbm6tjx45VuX9Xc7vdatOmjVq3bu2dFx4ertatW5fb36rqqMzV+3rl85V97dWrl3r16uW97Lpo0SJNnTr1Z5fVrqhuXx0OhyZNmqQ33nhDkrRixQqFhIRo2LBhkqS8vDx9/fXXCgsL80733nuvHA6Hjhw5UmnN1W330KFDioqKUpMm/ztVxcTElOsjLy9PTz31VLltL1u2rNwlWDQehBbqTFxcnOLj4/XOO+9UuVxUVJT27dtXbt6+ffvkcrlqXUNBQYH357KyMhUWFsrpdPrV1+zZs7V7925t2rRJp0+fVlFRkbp16yZz1W/zqSwEroiKitKpU6d06tQp77yTJ0/q1KlTtd7fq/f1yuer9/Xxxx/X66+/ruzsbGVnZ2vSpEmV9uXLviYnJ2v79u3Kzc3V4sWLNXHiRG+YdOjQQYMGDVJRUZF3On36tC5cuKBOnTp5+7g6fHzZbqdOneR2u1VWVuZd5+DBg+X66NChgxYsWFBu28XFxVq7dq2P3yRsQmihTi1atEgrVqxQWlqaDh48KGOMzpw5oyVLlujpp5+WJE2ZMkVvvvmmvvjiC5WWluqzzz7TG2+8oZSUlFpvf/78+fr+++916dIl/fOf/9SlS5d0//33+9XX6dOn1aJFC4WHh+vy5ct65ZVXlJubW26ZDh06aM+ePZX20a9fPyUkJGj69Ok6c+aMTp8+rd/97ndKTExUUlKSX3VdsWTJEm3btk0lJSV66623lJ2drUceecTb/tBDD+n48eOaMmWKRo4cqYiIiFrta8eOHXXPPfdo1qxZ2rp1a7kQnDhxorKzs7VgwQL997//lTFGbrdbq1evrnIfqtvu8OHDdenSJc2ZM0eXLl3S3r179fLLL5frY+bMmfq///s/ZWVlqaysTBcvXlRWVpa+/vprX75GWIbQQp0aMmSIvvrqKx06dEj9+vXzPhH26aefavTo0ZKkMWPGaN68eXriiScUFham3//+95o/f74efPDBWm//8ccf16OPPqo2bdroo48+0tq1axUWFuZXX88++6zOnz+viIgIxcTE6OjRoxo4cGC5ZebMmaPnnntOYWFhGj58+M/6uOmmm/Txxx/r4sWLio2NVVxcnEpKSvTRRx+Vu9Tpj2nTpunpp59WWFiYnn/+ea1atarcZdebb75ZEydO1I4dOzRt2rRa76v00z841qxZozvvvLPcZTqXy6Vt27Zp/fr16tq1q8LCwnT33Xdr165dtdpuWFiY1q5dq1WrVqlNmzYaN26cJk2apObNm3uXefLJJ/W3v/1N06ZNU5s2bdSpUyf98Y9/LPfkIhoPhzH85mKgsXrttdf04osvas+ePdVeyrTFSy+9pNdee63KES4aL0ZaQCN18uRJzZ8/X3/4wx+sDqyNGzfK7XbLGKPt27frhRdeKHcZFDcWQgtohP785z/L6XSqe/fumjp1aqDLqZXdu3frl7/8pVq2bKnRo0dr/PjxmjVrVqDLQoBweRAAYA1GWgAAaxBaAABrBAW6gJpq3ry52rVrF+gyAAC1dPz4cV28eLFG61gXWu3atav2NUEAgIbPn7fVcHkQAGANQgsAYA1CCwBgDUILAGANQgsAYA1CCwBgDUILAGANQgsAYA1CCwBgDUILAGANQqsOxMxeE+gSAOCGQGgBAKxBaAEArEFoAQCsQWgBAKxBaAEArEFoAQCsQWhdJzwGDwB1z+fQuuuuu9SjRw8lJibqtttuU3Z2tiQpLy9PAwYMUHx8vJKSkpSbm+tdx9822xFYAHB9+Bxa77//vnbu3KmcnBylpaUpOTlZkpSamqqUlBTt3btXs2bN8s6vTZtNCCgAqD8+h1ZYWJj359OnT8vhcOjYsWPavn27xo8fL0kaNWqU3G638vPz/W6zGQEGANdXUE0Wfuyxx/T5559LktauXSu3263IyEgFBf3UjcPhkMvlUmFhoVq1auVXW2xsbF3uHwCgEanRgxhLliyR2+3Ws88+q1mzZl2vmsrJyMiQ0+n0TsXFxfWyXQBAw+PX04MTJkzQ559/LqfTqcOHD6ukpESSZIxRYWGhXC6XoqKi/Gq7Vlpamjwej3cKDg72d18DgkuGAFB3fAqtoqIi/fDDD97Pq1evVnh4uNq3b6/evXtr6dKlkqSVK1fK6XQqNjbW7zZbXQknQgoArh+f7mmdPn1aY8aM0fnz59WkSRO1a9dOH3/8sRwOhxYtWqTk5GSlp6crNDRUmZmZ3vX8bQMAoCIOY4wJdBE14XQ65fF4Al2Gly8jq4K599VDJQBgF3/O57wRo55w2RAAao/QqgcEFgDUDUILAGANQgsAYA1CCwBgDUILAGANQqsWeMACAOoXoQUAsAahVc8YnQGA/wgtAIA1CC0AgDUIrXrEpUEAqB1CCwBgDUILAGANQgsAYA1CCwBgDUILAGANQgsAYA1CCwBgDUILAGANQgsAYA1Cy0+83QIA6h+hBQCwBqEVAIzSAMA/hBYAwBqEFgDAGoQWAMAahBYAwBqEFgDAGj6F1oULFzRy5EjFx8erZ8+eGjp0qPLz8yVJQ4YMUefOnZWYmKjExES9+OKL3vWOHTumYcOGKS4uTgkJCdq8ebNPbQAAVCTI1wVTUlJ0zz33yOFw6NVXX9WUKVP0xRdfSJJefPFFjRw58mfrzJ49W/3799enn36qrKwsPfDAAzpw4ICaNm1aZRsAABXxaaR18803695775XD4ZAk9e/fXwUFBdWu9/7772vatGmSpKSkJHXs2FGbNm2qtg0AgIr4dU9r/vz5GjFihPfz7Nmz1b17d40dO1b79++XJJ04cUKXL19Whw4dvMvFxMSosLCwyrZrZWRkyOl0eqfi4mJ/SgYANAI1Dq309HTl5+drzpw5kqR33nlHu3fv1s6dO3Xbbbdp+PDhdVpgWlqaPB6PdwoODq7T/gEA9qhRaL3wwgv68MMP9cknn6hFixaSpKioKEmSw+HQ9OnTtX//fp04cULh4eEKCgrSkSNHvOsXFBTI5XJV2QYAQGV8Dq2MjAwtW7ZM69evV1hYmCSppKRER48e9S6zcuVKRUREKDw8XJI0ZswYLVy4UJKUlZWlQ4cOafDgwdW2AQBQEYcxxlS3kMfjUVRUlLp06aKQkBBJUvPmzfXZZ59p8ODBunjxopo0aaK2bdsqIyNDPXv2lCQdPXpUjz76qA4cOKBmzZrp1Vdf1R133FFtW1WcTqc8Hk9t9rnW6uqFtwVz76uTfgDARv6cz30KrYaE0AKAxsGf8zlvxAAAWIPQAgBYg9ACAFiD0GpA+I3GAFA1QgsAYA1CK4AYWQFAzRBaAABrEFoAAGsQWgAAaxBaAABrEFoNBA9lAED1CC0AgDUIrQYmZvYaRl0AUAlCqwEgpADAN4QWAMAahFYNMSoCgMAhtAAA1iC0AADWILQCjMuNAOA7QgsAYA1Cq4FiBAYAP0doAQCsQWgBAKxBaAEArEFoAQCsQWgBAKxBaAEArEFoAQCs4VNoXbhwQSNHjlR8fLx69uypoUOHKj8/X5J07NgxDRs2THFxcUpISNDmzZu96/nbBgBARXweaaWkpGjPnj365ptvNGLECE2ZMkWSNHv2bPXv3195eXnKzMzUuHHjdPny5Vq1AQBQEZ9C6+abb9a9994rh8MhSerfv78KCgokSe+//76mTZsmSUpKSlLHjh21adOmWrUBAFARv+5pzZ8/XyNGjNCJEyd0+fJldejQwdsWExOjwsJCv9uulZGRIafT6Z2Ki4v9KRkA0AjUOLTS09OVn5+vOXPmXI96fiYtLU0ej8c7BQcH18t2AQANT41C64UXXtCHH36oTz75RC1atFB4eLiCgoJ05MgR7zIFBQVyuVx+twEAUBmfQysjI0PLli3T+vXrFRYW5p0/ZswYLVy4UJKUlZWlQ4cOafDgwbVqAwCgIkG+LOTxePTUU0+pS5cuuuOOOyRJzZs311dffaXnnntOjz76qOLi4tSsWTMtXbpUTZs2lSS/2wAAqIjDGGMCXURNOJ1OeTyegG2/Pn/PVcHc++ptWwBQ3/w5n/NGDACANQgtAIA1CC0AgDUIrRqoz/tZgdgeADR0hBYAwBqEFgDAGoQWAMAahBYAwBqEFgDAGoQWAMAahBYAwBqEFgDAGoQWAMAahJaPeDsFAAQeoQUAsAahBQCwBqEFALAGoQUAsAahBQCwBqEFALAGodXA8ag9APwPoQUAsAahBQCwBqEFALAGoQUAsAahBQCwBqEFALAGoQUAsIZPoTVjxgzFxMTI4XAoJyfHOz8mJka33HKLEhMTlZiYqOXLl3vb8vLyNGDAAMXHxyspKUm5ubk+tQEAUBmfQmv06NHasmWLoqOjf9a2fPly5eTkKCcnR2PHjvXOT01NVUpKivbu3atZs2YpOTnZpzb8HP/BGAB+4lNo3X777XI6nT53euzYMW3fvl3jx4+XJI0aNUput1v5+flVtgEAUJVa39N67LHH1L17d02ePFnHjx+XJLndbkVGRiooKEiS5HA45HK5VFhYWGVbRTIyMuR0Or1TcXFxbUsGAFiqVqG1efNm7dy5Uzt27FDbtm01YcKEuqrLKy0tTR6PxzsFBwfX+TYAAHYIqs3KLpdLktS0aVPNnDlT8fHxkqSoqCgdPnxYJSUlCgoKkjFGhYWFcrlcCg0NrbQNAICq+D3SOnfunIqKiryfly1bpl69ekmS2rdvr969e2vp0qWSpJUrV8rpdCo2NrbKNgAAquLTSCs1NVVr1qzRkSNHdPfddyskJETr1q3TqFGjVFpaKmOMunTpoiVLlnjXWbRokZKTk5Wenq7Q0FBlZmb61AYAQGUcxhgT6CJqwul0yuPx1Pt2A/3YecHc+wK6fQCoa/6cz3kjBgDAGoQWAMAahBYAwBqEFgDAGoQWAMAahJYlAv30IgA0BIQWAMAahBYAwBqEFgDAGoQWAMAahBYAwBqEFgDAGoQWAMAahBYAwBqEFgDAGoSWD3gbBQA0DIQWAMAahBYAwBqElkW4TAngRkdoWYbgAnAjI7QAANYgtAAA1iC0AADWILQAANYgtAAA1iC0AADWILQAANYgtAAA1vAptGbMmKGYmBg5HA7l5OR45+fl5WnAgAGKj49XUlKScnNza90GAEBlfAqt0aNHa8uWLYqOji43PzU1VSkpKdq7d69mzZql5OTkWrcBAFAZhzHG+LpwTEyMVq9ercTERB07dkyxsbE6efKkgoKCZIxRZGSktmzZotDQUL/aYmNjq63B6XTK4/HUaqdrqqG9Oqlg7n2BLgEAas2f87nf97TcbrciIyMVFBQkSXI4HHK5XCosLPS7rSIZGRlyOp3eqbi42N+SAQCWa/APYqSlpcnj8Xin4ODgQJcEAAiQIH9XjIqK0uHDh1VSUuK9zFdYWCiXy6XQ0FC/2gAAqIrfI6327durd+/eWrp0qSRp5cqVcjqdio2N9bsNAICq+PQgRmpqqtasWaMjR44oPDxcISEhys/P1549e5ScnKwTJ04oNDRUmZmZ6t69uyT53Vad+n4Qo6E9hCHxIAaAxsGf83mNnh5sCAgtQgtA41CvTw+iYWiIoQoA1wuhZSnCCsCNiNCy0JXAIrgA3GgILQCANQgtAIA1CC0AgDUILQCANQgtAIA1CC0AgDUILQCANQgtAIA1CC0AgDUIrUaAN2MAuFEQWgAAaxBaAABrEFpV4LIbADQshFYjQcACuBEQWgAAaxBaAABrEFoAAGsQWgAAaxBaAABrEFqV4Gk8AGh4CC0AgDUILQCANQgtAIA1CK1GhPtwABo7QgsAYI06Ca2YmBjdcsstSkxMVGJiopYvXy5JysvL04ABAxQfH6+kpCTl5uZ616mqDf67Mtpi1AWgMaqzkdby5cuVk5OjnJwcjR07VpKUmpqqlJQU7d27V7NmzVJycrJ3+araAACoyHW7PHjs2DFt375d48ePlySNGjVKbrdb+fn5Vbah9hhlAWis6iy0HnvsMXXv3l2TJ0/W8ePH5Xa7FRkZqaCgIEmSw+GQy+VSYWFhlW3XysjIkNPp9E7FxcV1VXKlGstJP2b2mp/tS2PZNwA3pjoJrc2bN2vnzp3asWOH2rZtqwkTJtRFt5KktLQ0eTwe7xQcHFxnfd8ouM8FoLGok9ByuVySpKZNm2rmzJn68ssvFRUVpcOHD6ukpESSZIxRYWGhXC5XlW2oP4QYANvUOrTOnTunoqIi7+dly5apV69eat++vXr37q2lS5dKklauXCmn06nY2Ngq2wAAqExQbTs4evSoRo0apdLSUhlj1KVLFy1ZskSStGjRIiUnJys9PV2hoaHKzMz0rldVG66vmNlrVDD3vkCXAQA1VuvQ6tKli7Kzsytsu+WWW7Rt27Yat6H+XblUSJgBaMh4I8YNwtenCLnPBaAhI7RucIQUAJsQWgAAaxBaYLQFwBqE1jU4gfMdAGi4CC0AgDUILVSI0RaAhojQAgBYg9BCjTEKAxAohBZqhMACEEiEFipV0e/jAoBAIrTgF8IMQCDU+oW5aPwIKAANBSMtAIA1CC34rboRGCM0AHWN0AIAWIPQQq1U9oThlXmMtgDUJUILdY6gAnC9EFpX4WQLAA0bj7yjThD4AOoDIy1cd7xZA0BdIbRQbwguALVFaP1/nFDr37XfOX8GAKpDaCEgCCwA/iC00KBUFl6EGgCJ0JLECTGQKnpI4+p51/5cm+0AsB+hhXpVkycJq1qusrDztz8AdiC0YJWqRmVXf752XmXrA7BLQEMrLy9PAwYMUHx8vJKSkpSbm1vvNXASs09V7zqsbp4vbQAaroCGVmpqqlJSUrR3717NmjVLycnJgSwHjVB1YXbt/bLqXgBc3byK+qhpQBKoQOUcxhgTiA0fO3ZMsbGxOnnypIKCgmSMUWRkpLZs2aLY2NhK13M6nfJ4PLXePicGBELB3PuqXebK301flgVs5s/5PGDvHnS73YqMjFRQ0E8lOBwOuVwuFRYWlgutjIwMZWRkeD8fOXJETqezyr6Li4sVHBx8fQq/Tqi5fgS6ZudS/5YNdN3+oOb6YWPN0k91nz9/vsbrNfgX5qalpSktLa1G69TVaKw+UXP9sLFmyc66qbl+2Fiz9FPdRUVFNV4vYPe0oqKidPjwYZWUlEiSjDEqLCyUy+UKVEkAgAYuYKHVvn179e7dW0uX/nQNZOXKlXI6nVXezwIA3NgCenlw0aJFSk5OVnp6ukJDQ5WZmVkn/db0cmJDQM31w8aaJTvrpub6YWPNkv91B+zpQQAAaoo3YgAArEFoAQCsQWgBAKzRaEPr5ZdfVkJCgrp3764ePXp4n1JsaBrC+xdr4sKFCxo5cqTi4+PVs2dPDR06VPn5+YEuy2eZmZlyOBxavXp1oEvxycWLFzV9+nTFxcWpe/fuGj9+fKBLqtbatWvVu3dvJSYmKiEhQW+//XagS/qZGTNmKCYmRg6HQzk5Od75Dfl4rKhmG47Hyr7rK2p8TJpGasOGDaaoqMgYY0xhYaEJDw83+fn5Aa7q5+644w6TmZlpjDFmxYoVpm/fvoEtqBrnz583a9asMWVlZcYYY1555RUzePDgwBblowMHDphbb73V9O/f36xatSrQ5fhk5syZZvr06d7v+/DhwwGuqGplZWWmdevW5ptvvjHG/PSdN2/e3Jw5cybAlZW3adMm43a7TXR0tMnOzvbOb8jHY0U123A8VvZdG+PfMdloQ+ta3bp1M59//nmgyyjn6NGjJiQkxFy+fNkY89MBHxERYfLy8gJcme+ysrJMdHR0oMuoVmlpqbnzzjvN9u3bzeDBg60IreLiYhMSEmJOnz4d6FJ8VlZWZtq0aWM2bdpkjDHmm2++MR07djQXL14McGUVu/pEasvxWNHJ/4qGfDxeW7e/x2SjvTx4tQ0bNujUqVNKSkoKdCnlVPX+RVvMnz9fI0aMCHQZ1crIyNDAgQPVp0+fQJfis3379qlNmzZKT09X3759ddttt2njxo2BLqtKDodDy5cv14MPPqjo6GgNGjRIb7/9tpo1axbo0qrF8Vi//D0mG/y7Bytz6623Ki8vr8K27OxsRUVFSZJ27dqliRMnavny5WrZsmV9ltjopaenKz8/v8GfSL/99lutXLlSmzdvDnQpNVJSUqKDBw/qF7/4hebOnavs7GwNHTpUubm5ioiICHR5FSopKdGzzz6rDz/8ULfffruysrJ0//33a9euXWrbtm2gy2vUbDkepVoek9dnINgw5ObmGpfLZdatWxfoUipky+WIijz//POmT58+5tSpU4EupVoLFiwwHTp0MNHR0SY6Oto0b97ctGvXzixYsCDQpVXp+PHjpkmTJqakpMQ7r2/fvmb9+vUBrKpqWVlZJi4urty8vn37NthjsLFcHrTheLy67tock402tL777jsTHR1tPv3000CXUqXBgweXu/Hbp0+fwBbkg3nz5pnevXubkydPBroUv9hyT8sYY4YOHWrWrFljjDFm//79Jjw83Hg8ngBXVbkjR46Y4OBg89133xljjMnLyzOtW7c2Bw8eDHBlFbs2AGw4Hq+t2Zbjsap7cTU5JhttaP361782YWFhpmfPnt6pIQbY7t27Tf/+/U1cXJzp06eP2blzZ6BLqpLb7TaSTJcuXbzfa79+/QJdVo3YFFr79u0zQ4YMMQkJCaZHjx7mgw8+CHRJ1Xr33Xe99SYkJJh//etfgS7pZ1JSUkynTp3MTTfdZNq3b2+6du1qjGnYx2NFNdtwPFb2XV+tJsck7x4EAFjjhnh6EADQOBBaAABrEFoAAGsQWgAAaxBaAABrEFoAAGsQWgAAaxBaAABr/D96PUyLQ0gqIgAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(6, 4), dpi=80)\n","plt.hist(y_train_by_average, bins='auto')\n","plt.title(\"Combination by average\")\n","plt.xlim(4,7)\n","plt.ylim(0,200)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"g5N-yLcqiF3L","executionInfo":{"status":"ok","timestamp":1689290083609,"user_tz":240,"elapsed":1616,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"7a0f9fe8-8dae-4567-aade-5aed379e203f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 480x320 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Highlight the 'anomalies' defined by threshold in red\n","\n","n, bins, patches = plt.hist(y_train_by_average, bins='auto')\n","condition = 5.6\n","for i, bin_val in enumerate(bins[:-1]):\n","    if bin_val > condition:\n","        patches[i].set_facecolor('red')\n","\n","plt.title(\"Combination by average\")\n","plt.xlabel('Average Autoencoder outlier score')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"hdmqr-K2iXwS","executionInfo":{"status":"ok","timestamp":1689290165570,"user_tz":240,"elapsed":3702,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"fef299e4-404c-464f-a149-ab69bcb94df0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Profile the normal and anomaly groups - Train Data\n","\n","threshold = 5.6\n","def descriptive_stat_threshold(df,pred_score, threshold):\n","    df = pd.DataFrame(df)\n","    df['Anomaly_Score'] = pred_score\n","    df['Group'] = np.where(df['Anomaly_Score']< threshold, 'Normal', 'Outlier')\n","\n","    cnt = df.groupby('Group')['Anomaly_Score'].count().reset_index().rename(columns={'Anomaly_Score':'Count'})\n","    cnt['Count %'] = (cnt['Count'] / cnt['Count'].sum()) * 100\n","    stat = df.groupby('Group').mean().round(2).reset_index()\n","    stat = cnt.merge(stat, left_on='Group',right_on='Group')\n","    return (stat)\n","\n","descriptive_stat_threshold(X_train,y_train_by_average, threshold)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"eDPI-LOSiqKm","executionInfo":{"status":"ok","timestamp":1689290222842,"user_tz":240,"elapsed":313,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"4dc9ec96-e777-42ad-ec42-d43da80cdd3b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group   Count   Count %  Charge_Upper_Fence_State  \\\n","0   Normal  130318  99.89728                  20450.43   \n","1  Outlier     134   0.10272                  22530.20   \n","\n","   Charge_Upper_Fence_State_drg  state_avg_drg_frq  \\\n","0                      13348.58              42.71   \n","1                      62516.68              67.67   \n","\n","   Provider_Payment_Standard_Deviation  Region_Payment_Standard_Deviation  \\\n","0                              6703.27                            7287.18   \n","1                             11457.62                            9149.64   \n","\n","   Payment_per_Discharge_State  Anomaly_Score  \n","0                       304.50          -0.01  \n","1                      1110.39           6.65  "],"text/html":["\n","\n","  <div id=\"df-a56c08e2-5a72-46e6-acaa-78c79bf26ddd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Count</th>\n","      <th>Count %</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>Provider_Payment_Standard_Deviation</th>\n","      <th>Region_Payment_Standard_Deviation</th>\n","      <th>Payment_per_Discharge_State</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>130318</td>\n","      <td>99.89728</td>\n","      <td>20450.43</td>\n","      <td>13348.58</td>\n","      <td>42.71</td>\n","      <td>6703.27</td>\n","      <td>7287.18</td>\n","      <td>304.50</td>\n","      <td>-0.01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>134</td>\n","      <td>0.10272</td>\n","      <td>22530.20</td>\n","      <td>62516.68</td>\n","      <td>67.67</td>\n","      <td>11457.62</td>\n","      <td>9149.64</td>\n","      <td>1110.39</td>\n","      <td>6.65</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a56c08e2-5a72-46e6-acaa-78c79bf26ddd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-b9f3f7f4-ab26-483c-ae53-3085e5bb78f6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b9f3f7f4-ab26-483c-ae53-3085e5bb78f6')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-b9f3f7f4-ab26-483c-ae53-3085e5bb78f6 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a56c08e2-5a72-46e6-acaa-78c79bf26ddd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a56c08e2-5a72-46e6-acaa-78c79bf26ddd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["at_train_avg = descriptive_stat_threshold(X_train,y_train_by_average, threshold)\n","at_train_avg[['Group', 'Anomaly_Score']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"LrDhUEy1u8_C","executionInfo":{"status":"ok","timestamp":1689293505849,"user_tz":240,"elapsed":152,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"165e8856-a91e-473c-c72d-5f3412ab0f28"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group  Anomaly_Score\n","0   Normal          -0.01\n","1  Outlier           6.65"],"text/html":["\n","\n","  <div id=\"df-5b85afc6-d022-4b50-8ddf-32d9f9f992b4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>-0.01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>6.65</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b85afc6-d022-4b50-8ddf-32d9f9f992b4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-d50c865d-3aac-48f6-b68f-b76021e8f0ff\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d50c865d-3aac-48f6-b68f-b76021e8f0ff')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-d50c865d-3aac-48f6-b68f-b76021e8f0ff button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5b85afc6-d022-4b50-8ddf-32d9f9f992b4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5b85afc6-d022-4b50-8ddf-32d9f9f992b4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["# Profile the normal and anomaly groups - Test Data\n","\n","threshold = 5.6\n","def descriptive_stat_threshold(df,pred_score, threshold):\n","    df = pd.DataFrame(df)\n","    df['Anomaly_Score'] = pred_score\n","    df['Group'] = np.where(df['Anomaly_Score']< threshold, 'Normal', 'Outlier')\n","\n","    cnt = df.groupby('Group')['Anomaly_Score'].count().reset_index().rename(columns={'Anomaly_Score':'Count'})\n","    cnt['Count %'] = (cnt['Count'] / cnt['Count'].sum()) * 100\n","    stat = df.groupby('Group').mean().round(2).reset_index()\n","    stat = cnt.merge(stat, left_on='Group',right_on='Group')\n","    return (stat)\n","\n","descriptive_stat_threshold(X_test,y_test_by_average, threshold)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"ohlXpVKcut86","executionInfo":{"status":"ok","timestamp":1689293359244,"user_tz":240,"elapsed":180,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"4324cba9-d88f-4173-9e38-910108edd5fb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group  Count    Count %  Charge_Upper_Fence_State  \\\n","0   Normal  32577  99.889615                  20433.49   \n","1  Outlier     36   0.110385                  21608.11   \n","\n","   Charge_Upper_Fence_State_drg  state_avg_drg_frq  \\\n","0                      13296.12              42.90   \n","1                      51592.25              84.66   \n","\n","   Provider_Payment_Standard_Deviation  Region_Payment_Standard_Deviation  \\\n","0                              6721.22                            7287.82   \n","1                             10978.95                            8325.30   \n","\n","   Payment_per_Discharge_State  Anomaly_Score  \n","0                       304.42          -0.01  \n","1                      1393.97           7.29  "],"text/html":["\n","\n","  <div id=\"df-3d086906-3b46-4664-a157-836200207f5b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Count</th>\n","      <th>Count %</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>Provider_Payment_Standard_Deviation</th>\n","      <th>Region_Payment_Standard_Deviation</th>\n","      <th>Payment_per_Discharge_State</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>32577</td>\n","      <td>99.889615</td>\n","      <td>20433.49</td>\n","      <td>13296.12</td>\n","      <td>42.90</td>\n","      <td>6721.22</td>\n","      <td>7287.82</td>\n","      <td>304.42</td>\n","      <td>-0.01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>36</td>\n","      <td>0.110385</td>\n","      <td>21608.11</td>\n","      <td>51592.25</td>\n","      <td>84.66</td>\n","      <td>10978.95</td>\n","      <td>8325.30</td>\n","      <td>1393.97</td>\n","      <td>7.29</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d086906-3b46-4664-a157-836200207f5b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-d500e6d3-894a-456a-ba0e-472e5519a3c3\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d500e6d3-894a-456a-ba0e-472e5519a3c3')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-d500e6d3-894a-456a-ba0e-472e5519a3c3 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3d086906-3b46-4664-a157-836200207f5b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3d086906-3b46-4664-a157-836200207f5b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["at_test_avg = descriptive_stat_threshold(X_test,y_test_by_average, threshold)\n","at_test_avg[['Group', 'Anomaly_Score']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"NZW-PT5GvVVp","executionInfo":{"status":"ok","timestamp":1689297918157,"user_tz":240,"elapsed":172,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"e160da8d-048e-4ae8-95cc-edbb82b43787"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group  Anomaly_Score\n","0   Normal          -0.01\n","1  Outlier           7.29"],"text/html":["\n","\n","  <div id=\"df-7f4d1dd4-0407-4c18-8c17-f8ed66debeed\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>-0.01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>7.29</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f4d1dd4-0407-4c18-8c17-f8ed66debeed')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-da6e461f-7645-4ce5-9eb9-b02c4f3d4ed0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-da6e461f-7645-4ce5-9eb9-b02c4f3d4ed0')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-da6e461f-7645-4ce5-9eb9-b02c4f3d4ed0 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7f4d1dd4-0407-4c18-8c17-f8ed66debeed button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7f4d1dd4-0407-4c18-8c17-f8ed66debeed');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","source":["### Varibale Explore:  \n","#### Charge_Upper_fence_State & Charge_Upper_fence_State_drg:  \n","The upper fence(Tukey's boxplot fences) of average total charge in each state or in each drg by states. Nomral group has a lower upper fence amount than outlier group.Which menas outlier group seems to have relatively higher extremly high charges.  \n","Business insight: Extremely high total payments are more likely to be anomalies.  \n","#### state_avg_drg_frq:  \n","Normal group has relatively lower same drg frequency in each state, while outlier group has higher ones. Generally speaking, outlier group has more frequency visit to the providers.  \n","Busienss insight: High frequency of visiting to hospital can be potential anomaly, as providers can chagre more through these extra visits.  \n","#### Provider_Payment_Standard_Deviation & Region_Payment_Standard_Deviation:  \n","Normal group has lower payment amount standard deviation than outlier group. This means normal payment shall have relatively stable range, while outliers have more various payment amount, and these abnormal payment can be frauds.  \n","Business insight: Those providers charge very different amount of same DRGs are potnetial fraudsters.  \n","#### Payment_per_Discharge_State:  \n","Normal group has relatively lower average payment amount per dischage by state than outlier group. This suggests that the outlier group may include cases with unusually high payment amounts, potentially indicating fraudulent or irregular activities.  \n","Business insight:  Identifying and monitoring cases with abnormally high payment amounts per discharge can help detect potential instances of health fraud, enabling proactive intervention and prevention measures.\n"],"metadata":{"id":"SWqD_579VKKd"}},{"cell_type":"markdown","source":["# Isolation Forest"],"metadata":{"id":"b5jstyqjlKvn"}},{"cell_type":"markdown","source":["Isolation Forest is a works by randomly partitioning the data points and constructing isolation trees. These trees are binary structures where anomalies are isolated into smaller partitions with shorter path lengths. During training, anomalies are expected to have fewer connections and shorter path lengths, making them easier to separate from normal instances. To detect anomalies, new data points are passed through the trained isolation forest model. The algorithm measures the average path length required to isolate the data point, and if it exceeds a predefined threshold, the point is classified as an anomaly. This way, isolation forest effectively identifies anomalies based on their uniqueness and isolation within the dataset."],"metadata":{"id":"_JbBOtoRx4X6"}},{"cell_type":"code","source":["df_model = df_new.iloc[:, [9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24]]\n","df_model = df_model.iloc[:, [0, 1, 2, 4, 7, 8, 10]]\n","\n","# Deal with missing vales\n","df_model = df_model.fillna(0)\n","\n","# Split traina nd test data\n","from sklearn.model_selection import train_test_split\n","\n","X = df_model.drop('Average_Total_Payments', axis = 1)\n","y= df_model['Average_Total_Payments']\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size= 0.2, random_state = 123)"],"metadata":{"id":"q_s5TiL4_sqL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Train KNN model and use the model to predict anomalies in train and test dataset\n","\n","from pyod.models.iforest import IForest\n","isft = IForest(max_samples=40, behaviour='new')\n","isft.fit(X_train)\n","\n","# Training data\n","y_train_scores_isft = isft.decision_function(X_train)\n","y_train_pred_isft = isft.predict(X_train)\n","\n","# Test data\n","y_test_scores_isft = isft.decision_function(X_test)\n","y_test_pred_isft = isft.predict(X_test)"],"metadata":{"id":"xvN6EQUVlM_T","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1689301902197,"user_tz":240,"elapsed":16217,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"d9451f8a-7aa2-4fdc-e308-97fcf8dbda56"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:432: UserWarning: X has feature names, but IsolationForest was fitted without feature names\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/base.py:432: UserWarning: X has feature names, but IsolationForest was fitted without feature names\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/base.py:432: UserWarning: X has feature names, but IsolationForest was fitted without feature names\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/base.py:432: UserWarning: X has feature names, but IsolationForest was fitted without feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["def count_stat(vector):\n","    unique, counts = np.unique(vector, return_counts=True)\n","    return dict(zip(unique, counts))\n","\n","# Threshold for the defined comtanimation rate\n","print(\"The threshold for the defined comtanimation rate:\" , isft.threshold_)\n","\n","print(\"The training data:\", count_stat(y_train_pred_isft))\n","print(\"The training data:\", count_stat(y_test_pred_isft))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wwiw8HMj_23z","executionInfo":{"status":"ok","timestamp":1689302366849,"user_tz":240,"elapsed":161,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"88d25c80-568b-4a88-847f-a636b5893d10"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The threshold for the defined comtanimation rate: -5.662547601293006e-18\n","The training data: {0: 117406, 1: 13046}\n","The training data: {0: 29277, 1: 3336}\n"]}]},{"cell_type":"code","source":["# Feature Importance\n","isft.feature_importances_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"262YtHNhRRGW","executionInfo":{"status":"ok","timestamp":1689302407239,"user_tz":240,"elapsed":150,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"59c6aba5-bdf7-42ca-e381-db00d74e3090"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.17267458, 0.15354534, 0.16279907, 0.14518953, 0.16357616,\n","       0.20221533])"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["# Draw distribution histogram to find the cutoff point as threshold\n","plt.hist(y_train_scores_isft, bins='auto')\n","plt.title(\"Histogram with 'auto' bins\")\n","plt.xlabel('Isolation Forest outlier score')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"Aao5dBEI_98C","executionInfo":{"status":"ok","timestamp":1689302426642,"user_tz":240,"elapsed":503,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"ca404d1d-1e9f-4677-e54f-5004c00748bb"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Highlight the 'anomalies' defined by threshold in red\n","\n","n, bins, patches = plt.hist(y_train_scores_isft, bins='auto')\n","\n","condition =0.14\n","for i, bin_val in enumerate(bins[:-1]):\n","  if bin_val > condition:\n","    patches[i].set_facecolor('red')\n","\n","\n","plt.title(\"Histogram with 'auto' bins\")\n","plt.xlabel('Isolation Forest outlier score')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"dERbfZg2CcvL","executionInfo":{"status":"ok","timestamp":1689302489083,"user_tz":240,"elapsed":1496,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"0014aa0c-c86d-4642-da76-e68be19fee2e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Profile the normal and anomaly groups - Train Data\n","\n","threshold = 0.14\n","\n","def descriptive_stat_threshold(df,pred_score, threshold):\n","    df = pd.DataFrame(df)\n","    df['Anomaly_Score'] = pred_score\n","    df['Group'] = np.where(df['Anomaly_Score']< threshold, 'Normal', 'Outlier')\n","\n","    cnt = df.groupby('Group')['Anomaly_Score'].count().reset_index().rename(columns={'Anomaly_Score':'Count'})\n","    cnt['Count %'] = (cnt['Count'] / cnt['Count'].sum()) * 100\n","    stat = df.groupby('Group').mean().round(2).reset_index()\n","    stat = cnt.merge(stat, left_on='Group',right_on='Group')\n","    return (stat)\n","\n","descriptive_stat_threshold(X_train,y_train_scores_isft, threshold)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"1PURa4HjAdBV","executionInfo":{"status":"ok","timestamp":1689302954418,"user_tz":240,"elapsed":316,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"2800618f-7ca8-40ce-8e5d-80e3d518da50"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group   Count    Count %  Charge_Upper_Fence_State  \\\n","0   Normal  130439  99.990035                  20452.30   \n","1  Outlier      13   0.009965                  23096.49   \n","\n","   Charge_Upper_Fence_State_drg  state_avg_drg_frq  \\\n","0                      13397.68              42.72   \n","1                      27458.01             127.35   \n","\n","   Provider_Payment_Standard_Deviation  Region_Payment_Standard_Deviation  \\\n","0                              6707.65                            7288.72   \n","1                             11739.29                           11021.25   \n","\n","   Payment_per_Discharge_State  Anomaly_Score  \n","0                       305.21          -0.07  \n","1                      1572.84           0.15  "],"text/html":["\n","\n","  <div id=\"df-2fc4c326-59f2-4f12-9d17-ae3dd8a99c3f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Count</th>\n","      <th>Count %</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>Provider_Payment_Standard_Deviation</th>\n","      <th>Region_Payment_Standard_Deviation</th>\n","      <th>Payment_per_Discharge_State</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>130439</td>\n","      <td>99.990035</td>\n","      <td>20452.30</td>\n","      <td>13397.68</td>\n","      <td>42.72</td>\n","      <td>6707.65</td>\n","      <td>7288.72</td>\n","      <td>305.21</td>\n","      <td>-0.07</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>13</td>\n","      <td>0.009965</td>\n","      <td>23096.49</td>\n","      <td>27458.01</td>\n","      <td>127.35</td>\n","      <td>11739.29</td>\n","      <td>11021.25</td>\n","      <td>1572.84</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2fc4c326-59f2-4f12-9d17-ae3dd8a99c3f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-68643d3c-da9d-4b9a-971e-349684e0ca49\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-68643d3c-da9d-4b9a-971e-349684e0ca49')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-68643d3c-da9d-4b9a-971e-349684e0ca49 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2fc4c326-59f2-4f12-9d17-ae3dd8a99c3f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2fc4c326-59f2-4f12-9d17-ae3dd8a99c3f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["knn_train = pd.DataFrame(descriptive_stat_threshold(X_train,y_train_scores_isft, threshold))\n","knn_train[['Group', 'Anomaly_Score']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"9qmlbC1Q676s","executionInfo":{"status":"ok","timestamp":1689302977834,"user_tz":240,"elapsed":13,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"37cce16e-97cb-4191-dd73-799b1f96d7b1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group  Anomaly_Score\n","0   Normal          -0.07\n","1  Outlier           0.15"],"text/html":["\n","\n","  <div id=\"df-4b06eb0d-c9a5-4a79-a6fb-301e777f81f7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>-0.07</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b06eb0d-c9a5-4a79-a6fb-301e777f81f7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-49bf6efa-a2af-4228-826d-21e053e7dae3\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-49bf6efa-a2af-4228-826d-21e053e7dae3')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-49bf6efa-a2af-4228-826d-21e053e7dae3 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4b06eb0d-c9a5-4a79-a6fb-301e777f81f7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4b06eb0d-c9a5-4a79-a6fb-301e777f81f7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["# Profile the normal and anomaly groups - Test data\n","\n","descriptive_stat_threshold(X_test,y_test_scores_isft, threshold)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"GOxosaafyoBD","executionInfo":{"status":"ok","timestamp":1689302985018,"user_tz":240,"elapsed":158,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"f0e64812-d3e3-46c4-d8b6-b6bb38440740"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group  Count    Count %  Charge_Upper_Fence_State  \\\n","0   Normal  32611  99.993867                  20434.53   \n","1  Outlier      2   0.006133                  24627.17   \n","\n","   Charge_Upper_Fence_State_drg  state_avg_drg_frq  \\\n","0                      13337.47              42.95   \n","1                      28386.87             137.38   \n","\n","   Provider_Payment_Standard_Deviation  Region_Payment_Standard_Deviation  \\\n","0                              6725.73                            7288.77   \n","1                              9790.35                           10429.66   \n","\n","   Payment_per_Discharge_State  Anomaly_Score  \n","0                       305.55          -0.07  \n","1                      1509.11           0.15  "],"text/html":["\n","\n","  <div id=\"df-b4d7dcd7-fe1f-446f-ba10-17b2f16ba929\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Count</th>\n","      <th>Count %</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>Provider_Payment_Standard_Deviation</th>\n","      <th>Region_Payment_Standard_Deviation</th>\n","      <th>Payment_per_Discharge_State</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>32611</td>\n","      <td>99.993867</td>\n","      <td>20434.53</td>\n","      <td>13337.47</td>\n","      <td>42.95</td>\n","      <td>6725.73</td>\n","      <td>7288.77</td>\n","      <td>305.55</td>\n","      <td>-0.07</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>2</td>\n","      <td>0.006133</td>\n","      <td>24627.17</td>\n","      <td>28386.87</td>\n","      <td>137.38</td>\n","      <td>9790.35</td>\n","      <td>10429.66</td>\n","      <td>1509.11</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4d7dcd7-fe1f-446f-ba10-17b2f16ba929')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-cde01614-056a-4adb-8ac9-19d2daa6e3af\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cde01614-056a-4adb-8ac9-19d2daa6e3af')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-cde01614-056a-4adb-8ac9-19d2daa6e3af button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b4d7dcd7-fe1f-446f-ba10-17b2f16ba929 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b4d7dcd7-fe1f-446f-ba10-17b2f16ba929');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["knn_test = pd.DataFrame(descriptive_stat_threshold(X_test,y_test_scores_isft, threshold))\n","knn_test[['Group', 'Anomaly_Score']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"rxgXBsgo9emK","executionInfo":{"status":"ok","timestamp":1689302993189,"user_tz":240,"elapsed":192,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"c4745314-9849-4fac-c5e2-11c8b3a0add0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group  Anomaly_Score\n","0   Normal          -0.07\n","1  Outlier           0.15"],"text/html":["\n","\n","  <div id=\"df-6d985c1a-5c28-47de-8dc0-9e002ef5ab2e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>-0.07</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d985c1a-5c28-47de-8dc0-9e002ef5ab2e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-764afa5b-b4df-475f-9473-05ff765a6765\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-764afa5b-b4df-475f-9473-05ff765a6765')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-764afa5b-b4df-475f-9473-05ff765a6765 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6d985c1a-5c28-47de-8dc0-9e002ef5ab2e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6d985c1a-5c28-47de-8dc0-9e002ef5ab2e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":79}]},{"cell_type":"markdown","source":["## Model Stability"],"metadata":{"id":"6Uf0mQURThas"}},{"cell_type":"code","source":["# Standardize data\n","X_train_norm, X_test_norm = standardizer(X_train, X_test)\n","\n","# Set a group of different n_estimators(the number of trees)\n","k_list = [50, 100, 150, 200, 250]\n","nclf = len(k_list)\n","\n","train_socre_isft = np.zeros([X_train.shape[0], nclf])\n","tewst_score_isft = np.zeros([X_test.shape[0], nclf])"],"metadata":{"id":"Tgz6ABRLVTf0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Build a function to train models with different n_estimators and store the results in a new dataframe\n","for i in range(nclf):\n","  k = k_list[i]\n","  isft = IForest(n_estimators=k)\n","  isft.fit(X_train_norm)\n","\n","  train_socre_isft[:, i] = isft.decision_function(X_train_norm)\n","  tewst_score_isft[:, i] = isft.decision_function(X_test_norm)\n","\n","train_scores_norm, test_scores_norm = standardizer(train_scores,test_scores)"],"metadata":{"id":"JNGUfaKJbLLy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Use the \"Average\" function to test the stability\n","\n","y_train_by_avg = average(train_scores_norm)\n","y_test_by_avg = average(test_scores_norm)\n","\n","plt.hist(y_train_by_avg, bins='auto')\n","plt.title(\"Combination by average\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"xQb2icTvdz8V","executionInfo":{"status":"ok","timestamp":1689306147075,"user_tz":240,"elapsed":2120,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"b9404a57-01d3-4f94-ecc4-8bcf35770d0b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.hist(y_train_by_avg, bins='auto')\n","plt.xlim(4, 7)\n","plt.ylim(0, 200)\n","plt.title(\"Combination by average\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"IsRKDY3VflJy","executionInfo":{"status":"ok","timestamp":1689306952026,"user_tz":240,"elapsed":1645,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"e06b2965-aac4-497b-cc24-412ef62fd134"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Mark the outliers in red based on threshold\n","\n","n, bins, patches = plt.hist(y_train_by_avg, bins='auto')\n","\n","condition = 5.7\n","\n","for i, bin_val in enumerate(bins[:-1]):\n","  if bin_val > condition:\n","    patches[i].set_facecolor('red')\n","\n","plt.title(\"Combination by average\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"NxTa1r97irqE","executionInfo":{"status":"ok","timestamp":1689307241110,"user_tz":240,"elapsed":1250,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"4d958e3c-a665-4e3d-f618-eaa73c1a8860"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Profile the normal and anomaly groups - Train Data\n","\n","threshold = 5.7\n","\n","descriptive_stat_threshold(X_train,y_train_by_avg, threshold)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"k_0AkJ7PkG6o","executionInfo":{"status":"ok","timestamp":1689307402697,"user_tz":240,"elapsed":136,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"5f4670a1-0568-4f3e-93b3-5f043b61ad41"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group   Count    Count %  Charge_Upper_Fence_State  \\\n","0   Normal  130325  99.902646                  20450.38   \n","1  Outlier     127   0.097354                  22690.85   \n","\n","   Charge_Upper_Fence_State_drg  state_avg_drg_frq  \\\n","0                      13348.66              42.71   \n","1                      65143.68              69.46   \n","\n","   Provider_Payment_Standard_Deviation  Region_Payment_Standard_Deviation  \\\n","0                              6703.84                            7287.47   \n","1                             11134.40                            8956.02   \n","\n","   Payment_per_Discharge_State  Anomaly_Score  \n","0                       304.59          -0.01  \n","1                      1062.98           6.71  "],"text/html":["\n","\n","  <div id=\"df-ecb40a23-9d43-43a4-b610-4c5611bfde98\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Count</th>\n","      <th>Count %</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>Provider_Payment_Standard_Deviation</th>\n","      <th>Region_Payment_Standard_Deviation</th>\n","      <th>Payment_per_Discharge_State</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>130325</td>\n","      <td>99.902646</td>\n","      <td>20450.38</td>\n","      <td>13348.66</td>\n","      <td>42.71</td>\n","      <td>6703.84</td>\n","      <td>7287.47</td>\n","      <td>304.59</td>\n","      <td>-0.01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>127</td>\n","      <td>0.097354</td>\n","      <td>22690.85</td>\n","      <td>65143.68</td>\n","      <td>69.46</td>\n","      <td>11134.40</td>\n","      <td>8956.02</td>\n","      <td>1062.98</td>\n","      <td>6.71</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ecb40a23-9d43-43a4-b610-4c5611bfde98')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-45a62017-6859-4c5f-82ea-106f62aec8f8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-45a62017-6859-4c5f-82ea-106f62aec8f8')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-45a62017-6859-4c5f-82ea-106f62aec8f8 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ecb40a23-9d43-43a4-b610-4c5611bfde98 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ecb40a23-9d43-43a4-b610-4c5611bfde98');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["isft_avg_train = descriptive_stat_threshold(X_train,y_train_by_avg, threshold)\n","isft_avg_train[['Group', 'Anomaly_Score']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"VBXZTjgpkWVS","executionInfo":{"status":"ok","timestamp":1689307460170,"user_tz":240,"elapsed":174,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"c7242784-2907-4252-a000-3b7554867840"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group  Anomaly_Score\n","0   Normal          -0.01\n","1  Outlier           6.71"],"text/html":["\n","\n","  <div id=\"df-ae51221b-b79a-4ee5-8607-639e1623d5a6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>-0.01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>6.71</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae51221b-b79a-4ee5-8607-639e1623d5a6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-2272d9ca-e1f7-4cfa-ac7a-079fd71cacb6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2272d9ca-e1f7-4cfa-ac7a-079fd71cacb6')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-2272d9ca-e1f7-4cfa-ac7a-079fd71cacb6 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ae51221b-b79a-4ee5-8607-639e1623d5a6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ae51221b-b79a-4ee5-8607-639e1623d5a6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["# Profile the normal and anomaly groups - Test Data\n","\n","descriptive_stat_threshold(X_test,y_test_by_avg, threshold)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"PQ8XNz1ekkQk","executionInfo":{"status":"ok","timestamp":1689307480419,"user_tz":240,"elapsed":171,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"50d50ce7-4ec1-453f-b991-6187a6046e4f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group  Count    Count %  Charge_Upper_Fence_State  \\\n","0   Normal  32578  99.892681                  20433.43   \n","1  Outlier     35   0.107319                  21694.38   \n","\n","   Charge_Upper_Fence_State_drg  state_avg_drg_frq  \\\n","0                      13295.88              42.90   \n","1                      52910.93              85.86   \n","\n","   Provider_Payment_Standard_Deviation  Region_Payment_Standard_Deviation  \\\n","0                              6721.32                            7287.83   \n","1                             11007.59                            8338.22   \n","\n","   Payment_per_Discharge_State  Anomaly_Score  \n","0                       304.50          -0.01  \n","1                      1350.01           7.33  "],"text/html":["\n","\n","  <div id=\"df-3ba73981-12db-4e60-8f1c-59f233eaa302\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Count</th>\n","      <th>Count %</th>\n","      <th>Charge_Upper_Fence_State</th>\n","      <th>Charge_Upper_Fence_State_drg</th>\n","      <th>state_avg_drg_frq</th>\n","      <th>Provider_Payment_Standard_Deviation</th>\n","      <th>Region_Payment_Standard_Deviation</th>\n","      <th>Payment_per_Discharge_State</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>32578</td>\n","      <td>99.892681</td>\n","      <td>20433.43</td>\n","      <td>13295.88</td>\n","      <td>42.90</td>\n","      <td>6721.32</td>\n","      <td>7287.83</td>\n","      <td>304.50</td>\n","      <td>-0.01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>35</td>\n","      <td>0.107319</td>\n","      <td>21694.38</td>\n","      <td>52910.93</td>\n","      <td>85.86</td>\n","      <td>11007.59</td>\n","      <td>8338.22</td>\n","      <td>1350.01</td>\n","      <td>7.33</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ba73981-12db-4e60-8f1c-59f233eaa302')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-0442c817-9cd4-45ff-a218-494f87609cbf\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0442c817-9cd4-45ff-a218-494f87609cbf')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-0442c817-9cd4-45ff-a218-494f87609cbf button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3ba73981-12db-4e60-8f1c-59f233eaa302 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3ba73981-12db-4e60-8f1c-59f233eaa302');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["isft_avg_test = descriptive_stat_threshold(X_test,y_test_by_avg, threshold)\n","isft_avg_test[['Group', 'Anomaly_Score']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"vv8f33ckkogM","executionInfo":{"status":"ok","timestamp":1689307498363,"user_tz":240,"elapsed":142,"user":{"displayName":"Zhengxi Shen","userId":"10593288712576885860"}},"outputId":"21f42b98-5b1c-4583-bbb8-342df734a33a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Group  Anomaly_Score\n","0   Normal          -0.01\n","1  Outlier           7.33"],"text/html":["\n","\n","  <div id=\"df-5b73595a-a82c-4b52-b4f6-212d95ed9bad\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>Anomaly_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>-0.01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Outlier</td>\n","      <td>7.33</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b73595a-a82c-4b52-b4f6-212d95ed9bad')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-dd67fc8f-5e69-41ca-9e67-f536c01d77a5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dd67fc8f-5e69-41ca-9e67-f536c01d77a5')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-dd67fc8f-5e69-41ca-9e67-f536c01d77a5 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5b73595a-a82c-4b52-b4f6-212d95ed9bad button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5b73595a-a82c-4b52-b4f6-212d95ed9bad');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":94}]},{"cell_type":"markdown","source":["### Varibale Explore:  \n","#### Charge_Upper_fence_State & Charge_Upper_fence_State_drg:  \n","The upper fence(Tukey's boxplot fences) of average total charge in each state or in each drg by states. Nomral group has a lower upper fence amount than outlier group.Which menas outlier group seems to have relatively higher extremly high charges.  \n","Business insight: Extremely high total payments are more likely to be anomalies.  \n","#### state_avg_drg_frq:  \n","Normal group has relatively lower same drg frequency in each state, while outlier group has higher ones. Generally speaking, outlier group has more frequency visit to the providers.  \n","Busienss insight: High frequency of visiting to hospital can be potential anomaly, as providers can chagre more through these extra visits.  \n","#### Provider_Payment_Standard_Deviation & Region_Payment_Standard_Deviation:  \n","Normal group has lower payment amount standard deviation than outlier group. This means normal payment shall have relatively stable range, while outliers have more various payment amount, and these abnormal payment can be frauds.  \n","Business insight: Those providers charge very different amount of same DRGs are potnetial fraudsters.  \n","#### Payment_per_Discharge_State:  \n","Normal group has relatively lower average payment amount per dischage by state than outlier group. This suggests that the outlier group may include cases with unusually high payment amounts, potentially indicating fraudulent or irregular activities.  \n","Business insight:  Identifying and monitoring cases with abnormally high payment amounts per discharge can help detect potential instances of health fraud, enabling proactive intervention and prevention measures."],"metadata":{"id":"aGt9st8mweZU"}},{"cell_type":"markdown","source":["## Final estimated anmaly percentage in the healthcare dataset\n","Throught the stabled models, we can find that there are approximately 1% of anomalies in the dataset."],"metadata":{"id":"gIcRlCL4FV1d"}},{"cell_type":"code","source":["%%shell\n","jupyter nbconvert --to html /content/Assignment_7_Zhengxi_Shen.ipynb"],"metadata":{"id":"i3ikgYlitRKX"},"execution_count":null,"outputs":[]}]}